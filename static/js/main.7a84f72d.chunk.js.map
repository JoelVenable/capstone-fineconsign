{"version":3,"sources":["components/welcome/assets/hero-4k.jpg","components/welcome/assets/hero-1080p.jpg","components/welcome/assets/hero-retina2.jpg","components/welcome/assets/hero-1024-2.jpg","components/welcome/assets/hero-mobile-retina.jpg","components/welcome/assets/hero-mobile-small.jpg","components/welcome/assets/gallery-lg.jpg","modules/api/Endpoint.js","modules/api/customers.js","modules/api/employees.js","modules/api/paintings.js","modules/api/orders.js","modules/api/orderItems.js","modules/api/users.js","modules/api/artists.js","modules/api/stores.js","modules/api/API.js","components/utility/ErrorDialog.jsx","components/utility/ConfirmDialog.jsx","components/utility/SelectUserType.jsx","components/Auth/StepOne.jsx","components/Auth/StepTwo.jsx","components/Auth/SignUp.jsx","components/Auth/Login.jsx","components/Auth/SelectLoginRegister.jsx","ContextProvider.jsx","components/utility/ProtectedRoute.jsx","components/Paintings/PaintingCard.jsx","components/utility/FilterArtists.jsx","components/Gallery/Gallery.jsx","components/utility/OrderButton.jsx","components/Orders/OrderTableItem.jsx","components/Orders/OrderTable.jsx","components/Orders/Orders.jsx","components/Artists/ArtistNameLink.jsx","components/utility/EditButton.jsx","components/utility/SendForReviewButton.jsx","components/utility/DeactivateButton.jsx","components/utility/KickbackButton.jsx","components/utility/GoLiveButton.jsx","components/utility/DeleteButton.jsx","components/PaintingList/PaintingControls.jsx","components/Paintings/BuyButton.jsx","components/Paintings/PaintingDetail.jsx","components/PaintingList/PaintingTableItem.jsx","components/PaintingList/PaintingTable.jsx","components/utility/compressImage.js","components/PaintingList/AddPainting.jsx","components/PaintingList/PaintingList.jsx","components/Artists/ArtistCard.jsx","components/Artists/Artists.jsx","modules/checkRoute.js","components/Account/AccountOrderTableItem.jsx","components/Account/Account.jsx","components/Artists/EditArtistButton.jsx","components/Artists/ArtistProfile.jsx","components/PaintingList/EditPainting.jsx","components/Artists/EditArtist.jsx","components/Cart/PaintingCartItem.jsx","components/Cart/Cart.jsx","components/Orders/DeleteOrderItemModal.jsx","components/Orders/PaintingOrderItem.jsx","components/Orders/CancelOrderModal.jsx","components/Orders/OrderControls.jsx","components/Orders/StatusItem.jsx","components/Orders/OrderDetail.jsx","components/Users/UserTable.jsx","components/Users/ShowStatus.jsx","components/Users/ArtistTableItem.jsx","components/utility/SubmitButton.jsx","components/Users/EmployeeTableItem.jsx","components/Users/CustomerTableItem.jsx","AllUsersContext.jsx","components/Users/UserTableItem.jsx","components/Users/UserList.jsx","routes.jsx","components/utility/media/index.jsx","components/Nav/CartItem.jsx","components/Nav/SignInButton.jsx","components/Nav/SignoutDropdownItem.jsx","components/Nav/PhoneNav.jsx","components/Nav/SignoutMenuItem.jsx","components/Nav/TabletNav.jsx","components/Nav/ComputerNav.jsx","components/Navbar.jsx","components/welcome/HeroImage.jsx","components/welcome/Title.jsx","components/welcome/GalleryButton.jsx","components/welcome/Welcome.jsx","ApplicationViews.jsx","index.jsx"],"names":["module","exports","__webpack_require__","p","baseURL","Endpoint","url","this","create","obj","fetch","method","headers","Content-Type","body","JSON","stringify","then","checkAndParseResponse","catch","catchError","getAll","params","getOne","id","concat","update","object","replace","newObject","delete","response","status","Error","json","error","console","log","endpoint","customers","getFromUserId","userId","edit","newParams","employees","paintings","orders","getMine","customerId","getMyOpenCart","results","length","orderItems","findExisting","orderId","paintingId","users","checkExisting","username","foundUsers","register","login","_login","Object","asyncToGenerator","regenerator_default","a","mark","_callee","password","userArray","wrap","_context","prev","next","sent","abrupt","stop","_x","_x2","apply","arguments","artists","API","stores","get","ErrorDialog","_ref","title","text","hide","isVisible","textColor","react_default","createElement","Modal","open","onClose","basic","size","Header","icon","color","content","Content","Actions","Button","onClick","Icon","name","ConfirmDialog","confirmAction","confirmBtnColor","btnIcon","btnText","defaultProps","NaN","options","key","value","SelectUserType","userType","setUserType","disabled","Dropdown","selection","placeholder","onChange","_e","_ref2","StepOne","showError","showConfirm","warning","handleFieldChange","handleUserTypeChange","handleStepOneSubmit","handleEmployeeSubmit","email","showStepTwo","_useState","useState","_useState2","slicedToArray","terms","setTerms","_useState3","_useState4","success","setSuccess","_useState5","_useState6","setError","_useState7","_useState8","loading","setLoading","_useState9","_useState10","setDisabled","myFieldChange","e","Form","Input","iconPosition","Message","header","type","Field","Checkbox","label","checked","variant","style","float","labelPosition","preventDefault","setTimeout","StepTwo","firstName","lastName","address","city","state","zipcode","handleStepTwoSubmit","redirect","Fragment","Group","widths","SignUp","_Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","step","accountBalance","evt","setState","defineProperty","target","toggleCheck","oldState","createUser","_this$state","isActive","canEditInventory","canProcessOrders","canEditEmployees","canEditUsers","_this$state2","userObj","description","imageUrl","avatarUrl","hometown","profitRatio","phoneNumber","activeDate","_ref3","inherits","createClass","_this$props","props","Step","active","Title","Description","assign","Component","Login","setUsername","setPassword","wait","ms","Promise","r","showSuccess","SelectLoginRegister","isOpen","handleClose","tabPosition","setTabPosition","handleChange","Menu","className","Item","marginBottom","SignUp_SignUp","Context","React","createContext","Consumer","Provider","handleLoginClose","isLoginModalVisible","doLogin","getOpenCart","user","typeObj","sessionStorage","clear","handleInvalidLogin","setItem","location","history","pathname","push","hideError","handleErrorClose","isErrorDialogVisible","errorMessage","hideConfirm","isConfirmDialogVisible","confirmObject","message","parse","getItem","logout","optionalCallbackFunction","add","remove","myCart","getCartFromSessionStorage","_this$state3","updateAll","custId","customer","_ref4","createCart","endpoints","newState","all","map","data","forEach","item","index","_createCart","_callee2","_this$state4","newCart","_context2","isCompleted","createdTimestamp","Date","isSubmitted","isCancelled","addToCart","_addToCart","_callee3","_this$state5","_context3","found","_x3","removeFromCart","_this$state6","itemToRemove","find","cartItem","submitCart","cartId","calculateOrderTotal","_this$state7","reduce","acc","painting","currentPrice","completeOrder","_completeOrder","_callee4","_this$state8","order","orderTotal","storeProfit","roundDollars","_context4","num","Math","round","approvedTime","pntg","artistShare","artist","storeShare","artistId","isSold","isLive","isPendingSale","store","_x4","showLogin","minus","substring","_callee5","_context5","t0","t1","t2","t3","t4","t5","_ref8","_callee6","_context6","_x5","_ref9","_callee7","_context7","_x6","children","_this$state9","PureComponent","ContextProvider","withRouter","cart","ProtectedRoute","render","isAuthorized","rest","objectWithoutProperties","incomingRender","react_router","to","PaintingCard","thumbUrl","Card","Image","src","alt","Meta","showPaintingStatus","react_router_dom","FilterArtists","setArtist","showOnlyActive","inline","clearable","useContext","showActive","showAll","iamge","avatar","artistImageUrl","filter","Gallery","setArtistId","sold","setSold","Table","Row","HeaderCell","textAlign","verticalAlign","slider","Grid","container","Column","mobile","tablet","computer","OrderButton","Popup","trigger","OrderTableItem","inputDate","_useContext","accumulator","Cell","as","image","minHeight","paddingLeft","display","flexDirection","alignItems","Subheader","submittedTime","toLocaleString","hour12","weekday","day","month","hour","minute","Label","OrderTable","ordersList","Body","Orders","activeTab","setActiveTab","storeAccount","setStoreAccount","getStoreAccount","useEffect","panes","menuItem","Tab","Pane","celled","unstackable","activeIndex","onTabChange","ArtistNameLink","isLink","InternalLink","circular","EditButton","SendForReviewButton","DeactivateButton","KickbackButton","GoLiveButton","DeleteButton","showText","width","_confirmAction","PaintingControls","_paintings$find","myOrder","BuyButton","buttonText","setButtonText","primary","PaintingDetail","showBuyButton","setShowBuyButton","Container","stackable","fluid","imgUrl","marginTop","height","medium","whiteSpace","liveDescription","PaintingTableItem","selectable","isReviewed","showStatus","PaintingTable","paintingList","items","newItems","renderTableItems","mainImg","maxSizeMB","maxWidthOrHeight","useWebWorker","thumbImg","avatarImg","compressImage","_compressImage","imageFile","imageType","compressedFile","shrinkImage","AddPainting","setName","setDescription","photo","setPhoto","_useState11","_useState12","price","setPrice","_useState13","_useState14","setMedium","_useState15","_useState16","setHeight","_useState17","_useState18","setWidth","_handleSubmit","submittedDescription","forSaleDate","onSubmit","handleSubmit","required","control","Select","parseInt","files","TextArea","_ref5","rows","PaintingList","tableType","ArtistCard","Artists","checkEmployeeAccess","employeePropToCheck","employee","checkLoggedIn","checkNotCustomer","canEditArtistPermissions","canEditCustomers","AccountOrderTableItem","cursor","Account","Segment","columns","AccountRow","EditArtistButton","ArtistProfile","controls","artistDescription","EditPainting","editedPainting","goBack","justifyContent","EditControls","EditArtist","setFirstName","setLastName","setHometown","setPhoneNumber","editedArtist","PaintingCartItem","Cart","orderedPaintings","orderItem","isDefined","Dimmer","Loader","Responsive","minWidth","maxWidth","Transition","animation","duration","total","DeleteOrderItemModal","isModalVisible","orderItemId","setMessage","modalDisabled","setModalDisabled","successHidden","setSuccessHidden","hidden","cancelMessage","PaintingOrderItem","showControls","setIsModalVisible","_painting$orderItem","textDecoration","CancelOrderModal","subheader","cancelledTime","OrderControls","handleApprove","showCancelOrderModal","negative","marginRight","StatusItem","time","Detail","OrderDetail","authorized","showOrderCancelModal","Footer","colSpan","fontWeight","UserTable","ShowStatus","pending","ArtistTableItem","SubmitButton","initialIcon","defaultColor","submitActionThatReturnsPromise","setColor","setIcon","setbtnText","setButtonError","clearButtonStatus","setButtonSuccess","EmployeeTableItem","editEmployees","setEditEmployees","editInventory","setEditInventory","editUsers","setEditUsers","editOrders","setEditOrders","CustomerTableItem","UserConsumer","UserProvider","_PureComponent","_users","newUser","AllUsersContext_Context","UserTableItem","_ref$user","setActive","loggedInUser","toggleActive","toggle","UserList","context","HiDpi","react_responsive_default","minResolution","LoDpi","maxResolution","MediaDesktop","MediaPhone","MediaTablet","CartMenuItem","handleClick","numCartItems","floating","top","SignInButton","position","SignoutDropdownItem","PhoneMenu","emp","Divider","SignoutMenuItem","TabletMenu","ComputerMenu","Navbar","backgroundColor","@media (minWidth: 450px)","fontFamily","fontSize","objectFit","objectPosition","HeroImage","heroMobileHi","heroMobileLo","heroTabletHi","heroTabletLo","heroDesktopHi","heroDesktopLo","desktop","visible","setVisible","titleClassName","onKeyUp","GalleryButton","largeImg","borderRadius","Welcome","ApplicationViews","makeProtectedRoutes","myRoutes","route","path","makeClearRoutes","_this2","Sticky","exact","match","routes","checkProtectedRoutes","ReactDOM","build_default","fonts","font","weights","basename","AllUsersContext_UserProvider","ApplicationViews_ApplicationViews","document","getElementById"],"mappings":"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","file":"static/js/main.7a84f72d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero-4k.07c6dcba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero-1080p.105caf1a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero-retina2.3d3ec0ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero-1024-2.ae4bc4c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero-mobile-retina.45ddd260.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hero-mobile-small.bc825967.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gallery-lg.35e56c7a.jpg\";","/*\n\nThe Endpoint constructor function is designed to shorten all the common Fetch API calls\nmade to the local database.  It is initialized with a url endpoint and returns an object\nwith the following methods:\n\n{\n  create(newObject)\n  getAll()\n  getOne(id)\n  replace(id, newObject)  (PUT)\n  update(id, newObject)   (PATCH)\n  delete(id)\n}\n\n\n*/\n\nexport const baseURL = 'https://fineconsign-api.herokuapp.com';\n\nexport function Endpoint(url) {\n  this.create = obj =>\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(obj),\n    })\n      .then(checkAndParseResponse)\n      .catch(catchError);\n\n  this.getAll = params =>\n    fetch(url + (params || ''))\n      .then(checkAndParseResponse)\n      .catch(catchError);\n\n  this.getOne = id =>\n    fetch(`${url}/${id}`)\n      .then(checkAndParseResponse)\n      .catch(catchError);\n\n  this.update = (id, object) =>\n    fetch(`${url}/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(object),\n    })\n      .then(checkAndParseResponse)\n      .catch(catchError);\n\n  this.replace = (id, newObject) =>\n    fetch(`${url}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newObject),\n    })\n      .then(checkAndParseResponse)\n      .catch(catchError);\n\n  this.delete = id =>\n    fetch(`${url}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }).catch(catchError);\n}\n\nfunction checkAndParseResponse(response) {\n  if (response.status === 404) {\n    throw new Error('404 error.  Check your JSON file!');\n  } else return response.json();\n}\n\nfunction catchError(error) {\n  // eslint-disable-next-line\n  return console.log(error);\n}\n","import { Endpoint, baseURL } from './Endpoint';\n\nconst endpoint = new Endpoint(`${baseURL}/customers`);\n\n//\n\nexport const customers = {\n  create: obj => endpoint.create(obj),\n  getAll: () => endpoint.getAll('?_expand=user'),\n  getFromUserId: userId => endpoint.getAll(`?userId=${userId}`),\n  edit: (id, newParams) => endpoint.update(id, newParams),\n  delete: id => endpoint.delete(id),\n};\n","import { Endpoint, baseURL } from './Endpoint';\n\nconst endpoint = new Endpoint(`${baseURL}/employees`);\n\n//\n\nexport const employees = {\n  create: obj => endpoint.create(obj),\n  getAll: () => endpoint.getAll('?_expand=user'),\n  getFromUserId: userId => endpoint.getAll(`?userId=${userId}`),\n  edit: (id, newParams) => endpoint.update(id, newParams),\n  delete: id => endpoint.delete(id),\n};\n","import { Endpoint, baseURL } from './Endpoint';\n\nconst endpoint = new Endpoint(`${baseURL}/paintings`);\n\n//\n\nexport const paintings = {\n  create: obj => endpoint.create(obj),\n  getAll: () => endpoint.getAll('?_expand=artist'),\n  getOne: id => endpoint.getOne(`${id}?_expand=artist`),\n  edit: (id, newParams) => endpoint.update(id, newParams),\n  delete: id => endpoint.delete(id),\n};\n","import { Endpoint, baseURL } from './Endpoint';\n\nconst endpoint = new Endpoint(`${baseURL}/orders`);\n\n//\n\nexport const orders = {\n  create: obj => endpoint.create(obj),\n  getAll: () => endpoint.getAll('?_embed=orderItems&_expand=customer'),\n  getOne: id => endpoint.getAll(`/${id}?_embed=orderItems&_expand=customer`),\n  getMine: customerId => endpoint.getAll(`?customerId=${customerId}`),\n  getMyOpenCart: customerId => endpoint.getAll(`?customerId=${customerId}&isSubmitted=false&_embed=orderItems`)\n    .then((results) => {\n      if (results.length > 1) {\n        /* eslint-disable-next-line */\n        console.log('Warning, multiple carts found!');\n      }\n\n      if (results.length > 0) return results;\n      return ['not found'];\n    }),\n  edit: (id, newParams) => endpoint.update(id, newParams),\n  delete: id => endpoint.delete(id),\n};\n","import { Endpoint, baseURL } from './Endpoint';\n\nconst endpoint = new Endpoint(`${baseURL}/orderItems`);\n\n//\n\nexport const orderItems = {\n  create: obj => endpoint.create(obj),\n  findExisting: (orderId, paintingId) => (\n    endpoint.getAll(`?orderId=${orderId}&paintingId=${paintingId}`)),\n  getAll: () => endpoint.getAll(),\n  edit: (id, newParams) => endpoint.update(id, newParams),\n  delete: id => endpoint.delete(id),\n};\n","import { Endpoint, baseURL } from './Endpoint';\n\nconst endpoint = new Endpoint(`${baseURL}/users`);\n\n\nexport const users = {\n  checkExisting: obj => endpoint.getAll(`?username=${obj.username}`).then((foundUsers) => {\n    if (foundUsers.length !== 0) throw new Error('Username already exists!');\n    else return null;\n  }),\n  register: obj => endpoint.create(obj),\n  getAll: () => endpoint.getAll(),\n  edit: (id, newParams) => endpoint.update(id, newParams),\n  delete: id => endpoint.delete(id),\n  //  TODO:  replace plaintext passwords in database with real auth.\n  login: async (username, password) => {\n    const userArray = await endpoint.getAll(`?username=${username}&password=${password}`);\n    if (userArray.length) return userArray[0];\n    throw new Error('Login error!  No users found with that username/password.');\n  },\n};\n","import { Endpoint, baseURL } from './Endpoint';\n\nconst endpoint = new Endpoint(`${baseURL}/artists`);\n\n//\n\nexport const artists = {\n  create: obj => endpoint.create(obj),\n  getAll: () => endpoint.getAll('?_embed=paintings'),\n  getFromUserId: userId => endpoint.getAll(`?userId=${userId}`),\n  edit: (id, newParams) => endpoint.update(id, newParams),\n  delete: id => endpoint.delete(id),\n};\n","import { Endpoint, baseURL } from './Endpoint';\n\nconst endpoint = new Endpoint(`${baseURL}/stores`);\n\n//\n\nexport const stores = {\n  create: obj => endpoint.create(obj),\n  get: () => endpoint.getOne(1),\n  edit: (id, newParams) => endpoint.update(id, newParams),\n  delete: id => endpoint.delete(id),\n};\n","import { customers } from './customers';\nimport { employees } from './employees';\nimport { paintings } from './paintings';\nimport { orders } from './orders';\nimport { orderItems } from './orderItems';\nimport { users } from './users';\nimport { artists } from './artists';\nimport { stores } from './stores';\n\nexport const API = {\n  employees,\n  customers,\n  paintings,\n  orders,\n  orderItems,\n  artists,\n  users,\n  stores,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Modal, Header, Button, Icon,\n} from 'semantic-ui-react';\n\nexport function ErrorDialog({\n  //  Props:\n  title, // REQUIRED.  The title of the message requesting delete confirmation\n  text, // The inner content of text to be displayed\n  hide, // REQUIRED.  The callback function that updates the \"isVisible\"\n  isVisible, // REQUIRED. Boolean value.  Dialog will show when 'true'\n  textColor, // String value.  Accepts color of all text.\n}) {\n  return (\n    <Modal open={isVisible} onClose={hide} basic size=\"small\">\n      <Header icon=\"warning\" color={textColor} content={title} />\n      {text ? <Modal.Content><h3>{text}</h3></Modal.Content> : null}\n      <Modal.Actions>\n        <Button color=\"grey\" onClick={hide}>\n          <Icon name=\"checkmark\" />\n          {' '}\n          Ok\n        </Button>\n      </Modal.Actions>\n    </Modal>\n\n  );\n}\n\nErrorDialog.propTypes = {\n  title: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  hide: PropTypes.func.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  textColor: PropTypes.string,\n};\n\nErrorDialog.defaultProps = {\n  text: null,\n  textColor: 'orange',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal, Header, Button, Icon,\n} from 'semantic-ui-react';\n\nexport function ConfirmDialog({\n  //  Props:\n  title, // REQUIRED.  The title of the message requesting delete confirmation\n  text, // The inner content of text to be displayed\n  id, // The id to be passed to the delete function when confirmed (optional)\n  hide, // REQUIRED.  The callback function that updates the \"isModalVisible\"\n  isVisible, // REQUIRED. Boolean value.  Dialog will show when 'true'\n  confirmAction, // Function called when action is confirmed\n  confirmBtnColor, // String value.  Accepts color of confirmation button.\n  icon, // String value or null.  Icon next to the title\n  btnIcon, // String value or null.  Icon inside the confirmation button\n  btnText, // string value.  Defaults to \"yes\"\n}) {\n  const handleAction = () => {\n    if (id) confirmAction(id);\n    else confirmAction();\n    hide();\n  };\n\n  return (\n    <Modal open={isVisible} onClose={hide}>\n      <Header icon={icon} content={title} />\n      {text ? <Modal.Content><h4>{text}</h4></Modal.Content> : null}\n      <Modal.Actions>\n        <Button color=\"grey\" onClick={hide}>\n          <Icon name=\"user cancel\" />\n          {' No'}\n        </Button>\n        <Button color={confirmBtnColor} onClick={handleAction}>\n          <Icon name={btnIcon} />\n          {` ${btnText}`}\n        </Button>\n      </Modal.Actions>\n    </Modal>\n\n\n  );\n}\n\nConfirmDialog.propTypes = {\n  title: PropTypes.string,\n  text: PropTypes.string,\n  id: PropTypes.number,\n  hide: PropTypes.func.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  confirmAction: PropTypes.func,\n  confirmBtnColor: PropTypes.string,\n  icon: PropTypes.string,\n  btnIcon: PropTypes.string,\n  btnText: PropTypes.string,\n};\n\nConfirmDialog.defaultProps = {\n  title: '',\n  text: null,\n  id: NaN,\n  icon: null,\n  confirmAction: null,\n  confirmBtnColor: 'green',\n  btnIcon: 'check',\n  btnText: 'Yes',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst options = [\n  {\n    key: 'customer',\n    text: 'Customer',\n    value: 'customer',\n    icon: 'user',\n  },\n  {\n    key: 'artist',\n    text: 'Artist',\n    value: 'artist',\n    icon: 'paint brush',\n  },\n  {\n    key: 'employee',\n    text: 'Employee',\n    value: 'employee',\n    icon: 'id card',\n  },\n];\n\n\nexport function SelectUserType({\n  userType,\n  setUserType,\n  disabled,\n}) {\n  return (\n    <Dropdown\n      selection\n      disabled={disabled}\n      placeholder=\"Select user type\"\n      value={userType}\n      onChange={(_e, { value }) => {\n        setUserType(value);\n      }}\n      options={options}\n    />\n  );\n}\n\n\nSelectUserType.propTypes = {\n  userType: PropTypes.oneOf(['customer', 'employee', 'artist']).isRequired,\n  setUserType: PropTypes.func.isRequired,\n  disabled: PropTypes.bool,\n};\n\nSelectUserType.defaultProps = {\n  disabled: false,\n};\n","\n\nimport React, { useState } from 'react';\nimport {\n  Checkbox, Form, Button, Message, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { SelectUserType } from '../utility/SelectUserType';\n\n\nexport function StepOne({\n  showError,\n  showConfirm,\n  warning,\n  handleFieldChange,\n  handleUserTypeChange,\n  handleStepOneSubmit,\n  handleEmployeeSubmit,\n  userType,\n  username,\n  email,\n  password,\n  showStepTwo,\n}) {\n  const [terms, setTerms] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n\n\n  const toggleTerms = () => setTerms(!terms);\n\n  const myFieldChange = (e) => {\n    // clears error state, then passes the event through...\n    setError(false);\n    handleFieldChange(e);\n  };\n\n\n  return (\n    <Form\n      warning={warning}\n      success={success}\n      error={error}\n      size=\"tiny\"\n      loading={loading}\n    >\n      <Form.Input\n        placeholder=\"Username\"\n        value={username}\n        id=\"username\"\n        icon=\"users\"\n        disabled={disabled}\n\n        iconPosition=\"left\"\n        onChange={myFieldChange}\n      />\n      <Message\n        size=\"mini\"\n        success\n        header=\"Username is availble!\"\n        icon=\"check\"\n      />\n      <Message\n        size=\"mini\"\n        error\n        header=\"Username is already taken!\"\n        icon=\"cancel\"\n      />\n      <Form.Input\n        placeholder=\"email\"\n        id=\"email\"\n        disabled={disabled}\n        value={email}\n        icon=\"mail\"\n        type=\"email\"\n        iconPosition=\"left\"\n        onChange={myFieldChange}\n      />\n      <Form.Input\n        placeholder=\"password\"\n        value={password}\n        id=\"password\"\n        disabled={disabled}\n        icon=\"lock\"\n        type=\"password\"\n        iconPosition=\"left\"\n        onChange={myFieldChange}\n      />\n      <Form.Field>\n        <SelectUserType userType={userType} disabled={disabled} setUserType={handleUserTypeChange} />\n      </Form.Field>\n      <Message\n        size=\"mini\"\n        warning\n        header=\"Employee accounts require administrator approval!\"\n        icon=\"alarm\"\n      />\n      <Checkbox\n        label=\"I accept the terms and conditions\"\n        checked={terms}\n        onChange={toggleTerms}\n      />\n\n      <Button\n        type=\"submit\"\n        disabled={disabled}\n        variant=\"contained\"\n        color=\"blue\"\n        style={{ float: 'right' }}\n        icon\n        labelPosition=\"right\"\n        onClick={(e) => {\n          e.preventDefault();\n          if (terms) {\n            setLoading(true);\n            if (userType !== 'employee') {\n              handleStepOneSubmit()\n                .then(() => {\n                  setSuccess(true);\n                  setTimeout(showStepTwo, 1000);\n                })\n                .catch(() => {\n                  setError(true);\n                  setLoading(false);\n                });\n            } else {\n              showConfirm({\n                title: 'New Employee accounts require manual administrator approval', // REQUIRED.  The title of the message requesting delete confirmation\n                text: 'Are you sure you need an employee account?', // The inner content of text to be displayed\n                confirmAction: () => {\n                  setLoading(false);\n                  setDisabled(true);\n                  handleEmployeeSubmit();\n                }, // Function called when action is confirmed\n                confirmBtnColor: 'blue', // String value.  Accepts color of confirmation button.\n                icon: 'id card', // String value or null.  Icon next to the title\n                btnIcon: 'send', // String value or null.  Icon inside the confirmation button\n                btnText: 'Send it!', // string value.  Defaults to \"yes\"\n              });\n            }\n          } else {\n            showError('Please accept the terms and conditions');\n          }\n        }}\n      >\n                Continue\n        <Icon name=\"right arrow\" />\n      </Button>\n    </Form>\n  );\n}\n\n\nStepOne.propTypes = {\n  showError: PropTypes.func.isRequired,\n  showConfirm: PropTypes.func.isRequired,\n  warning: PropTypes.bool.isRequired,\n  handleFieldChange: PropTypes.func.isRequired,\n  handleUserTypeChange: PropTypes.func.isRequired,\n  handleStepOneSubmit: PropTypes.func.isRequired,\n  handleEmployeeSubmit: PropTypes.func.isRequired,\n  userType: PropTypes.oneOf(['employee', 'customer', 'artist']).isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  showStepTwo: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form, Message, Icon, Button,\n} from 'semantic-ui-react';\n\n\nexport function StepTwo({\n  firstName,\n  lastName,\n  address,\n  city,\n  state,\n  zipcode,\n  username,\n  password,\n  handleFieldChange,\n  handleStepTwoSubmit,\n  login,\n  redirect,\n}) {\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n\n  return (\n    <>\n      <Form\n      // warning={warning}\n        success={success}\n      // error={error}\n        size=\"tiny\"\n        loading={loading}\n      >\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            placeholder=\"First Name\"\n            value={firstName}\n            id=\"firstName\"\n            onChange={handleFieldChange}\n          />\n          <Form.Input\n            placeholder=\"Last Name\"\n            value={lastName}\n            id=\"lastName\"\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            placeholder=\"Your street address\"\n            value={address}\n            id=\"address\"\n            onChange={handleFieldChange}\n          />\n          <Form.Input\n            placeholder=\"Your city\"\n            value={city}\n            id=\"city\"\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            placeholder=\"State\"\n            value={state}\n            id=\"state\"\n            onChange={handleFieldChange}\n          />\n          <Form.Input\n            placeholder=\"zipcode\"\n            value={zipcode}\n            id=\"zipcode\"\n            onChange={handleFieldChange}\n          />\n        </Form.Group>\n\n        {/*\n\n        <Message\n          size=\"mini\"\n          error\n          header=\"Username is already taken!\"\n          icon=\"cancel\"\n        /> */}\n        <Message\n          size=\"mini\"\n          success\n          header=\"Success!\"\n          icon=\"check\"\n        />\n\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"blue\"\n          style={{ float: 'right' }}\n          icon\n          labelPosition=\"left\"\n          onClick={(e) => {\n            e.preventDefault();\n            setLoading(true);\n            handleStepTwoSubmit()\n              .then(() => {\n                login(username, password);\n                setSuccess(true);\n                setTimeout(redirect, 600);\n              });\n          }}\n        >\n                   Register\n          <Icon name=\"plus\" />\n        </Button>\n      </Form>\n    </>\n  );\n}\n\n\nStepTwo.propTypes = {\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  address: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  city: PropTypes.string.isRequired,\n  state: PropTypes.string.isRequired,\n  zipcode: PropTypes.string.isRequired,\n  handleFieldChange: PropTypes.func.isRequired,\n  handleStepTwoSubmit: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  redirect: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport {\n  Step, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { StepOne } from './StepOne';\nimport { API } from '../../modules/api/API';\nimport { StepTwo } from './StepTwo';\n\nexport class SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    username: '',\n    /* eslint-disable-next-line */\n    userType: 'customer',\n    terms: false,\n    /* eslint-disable-next-line */\n    warning: false,\n    /* eslint-disable-next-line */\n    step: 1,\n    firstName: '',\n    lastName: '',\n    address: '',\n    city: '',\n    state: '',\n    zipcode: '',\n    accountBalance: 0,\n  }\n\n  // Update state whenever an input field is edited\n   handleFieldChange = (evt) => {\n     this.setState({ [evt.target.id]: evt.target.value });\n   };\n\n   toggleCheck = () => this.setState(oldState => ({ terms: !oldState.terms }))\n\n   handleUserTypeChange = (userType) => {\n     if (userType === 'employee') this.setState({ warning: true, userType });\n     else this.setState({ warning: false, userType });\n   };\n\n   handleStepOneSubmit = () => {\n     const { username } = this.state;\n\n\n     return API.users.checkExisting({ username });\n   }\n\n   createUser = () => {\n     const {\n       email,\n       password,\n       username,\n       userType,\n       warning,\n     } = this.state;\n     return API.users.register({\n       email,\n       password,\n       username,\n       userType,\n       // Activates artists or customers immediately, but not employees\n       isActive: !warning,\n     });\n   }\n\n   handleEmployeeSubmit = () => {\n     this.createUser().then(({ id }) => {\n       API.employees.create({\n         userId: id,\n         canEditInventory: false,\n         canProcessOrders: false,\n         canEditEmployees: false,\n         canEditUsers: false,\n       });\n     });\n   }\n\n   handleStepTwoSubmit = async () => {\n     const {\n       userType,\n       firstName,\n       lastName,\n       address,\n       city,\n       state,\n       zipcode,\n       accountBalance,\n     } = this.state;\n\n\n     const userObj = {\n       firstName,\n       lastName,\n       address,\n       city,\n       state,\n       zipcode,\n       accountBalance,\n     };\n     if (userType === 'artist') {\n       userObj.description = null;\n       userObj.imageUrl = null;\n       userObj.avatarUrl = null;\n       userObj.hometown = null;\n       userObj.profitRatio = 0.6;\n       userObj.phoneNumber = null;\n       userObj.isActive = false;\n       userObj.activeDate = null;\n     }\n\n\n     return this.createUser().then(({ id }) => {\n       userObj.userId = id;\n       API[`${userType}s`].create(userObj);\n     });\n   }\n\n  showStepTwo = () => {\n    this.setState({ step: 2 });\n  }\n\n\n  render() {\n    const {\n      step,\n    } = this.state;\n    const {\n      login,\n      redirect,\n      showError,\n      showConfirm,\n    } = this.props;\n    return (\n      <>\n        <Step.Group widths={2} size=\"mini\">\n          <Step active={step === 1}>\n            <Icon size=\"mini\" name=\"lock\" />\n            <Step.Content>\n              <Step.Title>User Account</Step.Title>\n              <Step.Description>Your login credentials</Step.Description>\n            </Step.Content>\n          </Step>\n\n          <Step active={step === 2}>\n            <Icon size=\"mini\" name=\"info circle\" />\n            <Step.Content>\n              <Step.Title>Details</Step.Title>\n              <Step.Description>Your Profile</Step.Description>\n            </Step.Content>\n          </Step>\n        </Step.Group>\n\n\n        {(step === 1) ? (\n          <StepOne\n            {...this.state}\n            handleFieldChange={this.handleFieldChange}\n            handleUserTypeChange={this.handleUserTypeChange}\n            handleEmployeeSubmit={this.handleEmployeeSubmit}\n            handleStepOneSubmit={this.handleStepOneSubmit}\n            showStepTwo={this.showStepTwo}\n            showError={showError}\n            showConfirm={showConfirm}\n          />\n        ) : (\n          <StepTwo\n            {...this.state}\n            handleFieldChange={this.handleFieldChange}\n            handleStepTwoSubmit={this.handleStepTwoSubmit}\n            login={login}\n            redirect={redirect}\n          />\n        ) }\n      </>\n    );\n  }\n}\n\nSignUp.propTypes = {\n  showError: PropTypes.func.isRequired,\n  showConfirm: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  redirect: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport {\n  Button, Form, Input, Message,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport function Login({ login, redirect }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const wait = ms => new Promise(r => setTimeout(r, ms));\n\n\n  // Update state whenever an input field is edited\n  const handleFieldChange = (evt) => {\n    if (evt.target.id === 'username') {\n      setUsername(evt.target.value);\n    } else if (evt.target.id === 'password') {\n      setPassword(evt.target.value);\n    }\n  };\n\n  const showSuccess = async () => {\n    setSuccess(true);\n    return wait(300);\n  };\n\n\n  return (\n    <Form loading={loading} success={success}>\n      <Message\n        size=\"mini\"\n        success\n        header=\"Success!\"\n        icon=\"check\"\n      />\n      <Form.Field>\n        <Input\n          placeholder=\"Username\"\n          value={username}\n          id=\"username\"\n          icon=\"users\"\n          iconPosition=\"left\"\n          onChange={handleFieldChange}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          placeholder=\"password\"\n          id=\"password\"\n          icon=\"lock\"\n          value={password}\n          type=\"password\"\n          iconPosition=\"left\"\n          onChange={handleFieldChange}\n        />\n      </Form.Field>\n\n\n      <Button\n        type=\"submit\"\n        style={{ float: 'right' }}\n        color=\"blue\"\n        onClick={(e) => {\n          e.preventDefault();\n          setLoading(true);\n          login(username, password)\n            .then(showSuccess)\n            .then(redirect)\n            .catch(() => {\n              setLoading(false);\n              setUsername('');\n              setPassword('');\n            });\n        }}\n      >\n                Sign In\n      </Button>\n    </Form>\n  );\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  redirect: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { Menu, Modal } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { SignUp } from './SignUp';\nimport { Login } from './Login';\n\nexport function SelectLoginRegister({\n  isOpen, handleClose, login, redirect, showError, showConfirm,\n}) {\n  const [tabPosition, setTabPosition] = useState('menuItem--0');\n  // 0 = login\n  // 1 = SignUp\n\n  function handleChange(e) {\n    setTabPosition(e.target.id);\n  }\n\n  return (\n    <Modal\n      open={isOpen}\n      onClose={handleClose}\n      size=\"small\"\n    >\n      <Modal.Header>\n        <Menu className=\"loginRegisterMenu\">\n          <Menu.Item\n            className=\"loginRegisterMenu-item\"\n            name=\"Login\"\n            active={tabPosition === 'menuItem--0'}\n            onClick={handleChange}\n            id=\"menuItem--0\"\n          >\n          LOGIN\n          </Menu.Item>\n          <Menu.Item\n            className=\"loginRegisterMenu-item\"\n            name=\"Register\"\n            active={tabPosition === 'menuItem--1'}\n            onClick={handleChange}\n            id=\"menuItem--1\"\n          >\n          REGISTER\n          </Menu.Item>\n        </Menu>\n      </Modal.Header>\n      <Modal.Content style={{ marginBottom: '2rem' }}>\n        {(tabPosition === 'menuItem--1') ? (\n          <SignUp\n            showError={showError}\n            showConfirm={showConfirm}\n            login={login}\n            redirect={redirect}\n          />\n        ) : (\n          <Login login={login} redirect={redirect} />\n        )}\n      </Modal.Content>\n    </Modal>\n  );\n}\n\n\nSelectLoginRegister.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  login: PropTypes.func.isRequired,\n  showError: PropTypes.func.isRequired,\n  showConfirm: PropTypes.func.isRequired,\n  redirect: PropTypes.func.isRequired,\n\n};\n","/* eslint react/no-unused-state: 0 */\n/* eslint react/no-direct-mutation-state: 0 */\n/* eslint react/destructuring-assignment: 0 */\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n// import * as firebase from 'firebase/app';\nimport { API } from './modules/api/API';\nimport { ErrorDialog } from './components/utility/ErrorDialog';\n// import { firebaseCredentials } from './env/firebaseCredentials';\n// import 'firebase/firebase-storage';\nimport { ConfirmDialog } from './components/utility/ConfirmDialog';\nimport { SelectLoginRegister } from './components/Auth/SelectLoginRegister';\n\nexport const Context = React.createContext();\n\n// try {\n//   firebase.initializeApp(firebaseCredentials);\n// } catch (e) {\n//   /* eslint-disable-next-line */\n//   console.log(\"You'll need to create a firebase account and provide \"\n//     + 'credentials inside /src/env/firebaseCredentials.js to use this app.'\n//     + '\\n\\nError message follows...\\n\\n', e);\n// }\n\nexport const { Consumer } = Context;\n\nclass Provider extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: JSON.parse(sessionStorage.getItem('userdata')),\n      // storageRef: firebase.storage().ref(),\n      logout: () => {\n        sessionStorage.clear();\n        this.setState({ user: null });\n        /* eslint-disable-next-line */\n        this.props.history.push('/');\n      },\n      /* eslint-disable-next-line */\n      history: this.props.history,\n      /* eslint-disable-next-line */\n      showError: (errorMessage, optionalCallbackFunction) => {\n        this.setState({\n          errorMessage,\n          isErrorDialogVisible: true,\n          handleErrorClose: optionalCallbackFunction,\n        });\n      },\n      showConfirm: confirmObject =>\n        this.setState({ confirmObject, isConfirmDialogVisible: true }),\n      handleErrorClose: null,\n      confirmObject: {},\n      errorMessage: '',\n\n      get: {},\n      add: {},\n      edit: {},\n      remove: {},\n      myCart: getCartFromSessionStorage(),\n      getOpenCart: () => {\n        const { user, updateAll } = this.state;\n        if (!user) return null;\n        if (user.userType !== 'customer') return null;\n        const custId = user.customer.id;\n\n        return API.orders.getMyOpenCart(custId).then(([myCart]) => {\n          if (myCart.id) {\n            //  Found an existing cart in the database\n            sessionStorage.setItem('myCart', JSON.stringify(myCart));\n            return this.setState({ myCart });\n          }\n          //  Did not find an existing cart, so make a new one\n          return this.state.createCart().then(updateAll);\n        });\n      },\n      updateAll: () => {\n        const endpoints = [\n          'artists',\n          'paintings',\n          'employees',\n          'customers',\n          'orders',\n          'orderItems',\n        ];\n        const newState = {};\n        return Promise.all(endpoints.map(endpoint => API[endpoint].getAll()))\n          .then((data) => {\n            data.forEach((item, index) => {\n              newState[endpoints[index]] = item;\n            });\n          })\n          .then(() => this.setState(newState));\n\n        //  TODO: If user is a customer, get their orders only\n        // orders, orderItems, - not fetching these automatically because reasons...\n      },\n      createCart: async () => {\n        const {\n          user, showError, getOpenCart, updateAll,\n        } = this.state;\n        if (!user) {\n          showError('Only customers can make purchases!');\n          return null;\n        }\n        if (user.userType !== 'customer') {\n          showError('Only customers can make purchases!');\n          return null;\n        }\n        const newCart = {\n          customerId: user.customer.id,\n          isCompleted: false,\n          createdTimestamp: new Date(),\n          isSubmitted: false,\n          isCancelled: false,\n        };\n        return API.orders\n          .create(newCart)\n          .then(getOpenCart)\n          .then(updateAll);\n      },\n      addToCart: async (paintingId) => {\n        const {\n          myCart, getOpenCart, user, showError, updateAll,\n        } = this.state;\n        if (!user) return null; // TODO: show register/login modal and add to cart when user finishes.\n        if (user.userType !== 'customer') {\n          //  Artists/employees should not see the \"Buy now\" control at all, but just in case...\n          showError('Only customers can place orders!');\n          return null; // TODO: show error\n        }\n\n        return API.orderItems\n          .findExisting(myCart.id, paintingId)\n          .then((found) => {\n            if (found.length === 0) {\n              return API.orderItems\n                .create({\n                  isCancelled: false,\n                  orderId: myCart.id,\n                  paintingId,\n                })\n                .then(getOpenCart)\n                .then(updateAll);\n            }\n            showError('Already in your cart!');\n            return null;\n          });\n      },\n      removeFromCart: (paintingId) => {\n        const { myCart, getOpenCart, updateAll } = this.state;\n        const itemToRemove = myCart.orderItems.find(\n          cartItem => cartItem.paintingId === paintingId,\n        );\n        return API.orderItems\n          .edit(itemToRemove.id, { paintingId: null, orderId: null })\n          .then(() => API.orderItems.delete(itemToRemove.id))\n          .then(getOpenCart)\n          .then(updateAll);\n      },\n      /* eslint-disable-next-line */\n      submitCart: cartId =>\n        API.orders\n          .edit(cartId, { isSubmitted: true })\n          .then(this.state.updateAll),\n      calculateOrderTotal: (orderId) => {\n        const { orders, paintings } = this.state;\n        const order = orders.find(item => item.id === orderId);\n        return order.orderItems.reduce(\n          (acc, item) =>\n            (!item.isCancelled\n              ? acc\n                + paintings.find(painting => painting.id === item.paintingId)\n                  .currentPrice\n              : acc),\n          0,\n        );\n      },\n      completeOrder: async (orderId) => {\n        const { paintings, calculateOrderTotal, updateAll } = this.state;\n        const order = await API.orders.getOne(orderId);\n        const orderTotal = calculateOrderTotal(orderId);\n        let storeProfit = 0;\n\n        function roundDollars(num) {\n          return Math.round(num * 100) / 100;\n        }\n\n        // Update customer account balance: accountBalance - orderTotal\n        await API.customers.edit(order.customerId, {\n          accountBalance: order.customer.accountBalance - orderTotal,\n        });\n\n        //  Update order in database to reflect sold status and the final order total\n        await API.orders.edit(orderId, {\n          isCompleted: true,\n          orderTotal,\n          approvedTime: new Date(),\n        });\n\n        await order.orderItems.map((item) => {\n          const painting = paintings.find(pntg => pntg.id === item.paintingId);\n\n          // Calculate artist's share of profit\n          const artistShare = roundDollars(\n            painting.currentPrice * painting.artist.profitRatio,\n          );\n\n          const storeShare = roundDollars(painting.currentPrice - artistShare);\n\n          storeProfit += storeShare;\n\n          return Promise.all([\n            // Update artist account balance: orderTotal * profitRatio\n            API.artists.edit(painting.artistId, {\n              accountBalance: painting.artist.accountBalance + artistShare,\n            }),\n\n            // Update painting to sold status\n            API.paintings.edit(painting.id, {\n              isSold: true,\n              isLive: false,\n              isPendingSale: false,\n              artistShare,\n              storeShare,\n            }),\n          ]);\n        });\n\n        // Update store account balance\n        return (\n          API.stores\n            .get()\n            .then(store =>\n              API.stores.edit(1, {\n                accountBalance: roundDollars(\n                  store.accountBalance + storeProfit,\n                ),\n              }))\n            // Then update everything\n            .then(updateAll)\n        );\n      },\n      isErrorDialogVisible: false,\n      isConfirmDialogVisible: false,\n      showLogin: () => this.setState({ isLoginModalVisible: true }),\n      isLoginModalVisible: false,\n    };\n\n    const endpoints = [\n      'employees',\n      'artists',\n      'customers',\n      'paintings',\n      'orders',\n      'orderItems',\n    ];\n    endpoints.forEach((endpoint) => {\n      //  the 'minus' variable chops off the 's' at the end of each endpoint\n      //  i.e. add.painting() instead of add.paintings()\n      const minus = endpoint.substring(0, endpoint.length - 1);\n      this.state[endpoint] = [];\n      this.state.get[endpoint] = async () =>\n        this.setState({ [endpoint]: await API[endpoint].getAll() });\n      this.state.add[minus] = async obj =>\n        API[endpoint].create(obj).then(this.state.get[endpoint]);\n      this.state.edit[minus] = (obj, id) =>\n        API[endpoint].edit(id, obj).then(this.state.get[endpoint]);\n      this.state.remove[minus] = async id =>\n        API[endpoint].delete(id).then(this.state.get[endpoint]);\n    });\n  }\n\n  componentDidMount() {\n    /* eslint-disable-next-line */\n    this.state.updateAll();\n  }\n\n  handleLoginClose = () => this.setState({ isLoginModalVisible: false });\n\n  doLogin = async (username, password) => {\n    const { showError, getOpenCart } = this.state;\n    sessionStorage.clear();\n    const user = await API.users\n      .login(username, password)\n      .catch(this.handleInvalidLogin);\n    if (user) {\n      if (!user.isActive) {\n        showError('This user account has been deactivated!');\n        return null;\n      }\n      const { userType } = user;\n      const [typeObj] = await API[`${userType}s`].getFromUserId(user.id);\n      user[userType] = typeObj;\n      sessionStorage.setItem('userdata', JSON.stringify(user));\n      this.setState({ user }, getOpenCart);\n      setTimeout(this.handleLoginClose, 500);\n    } else {\n      //  No user found...\n      throw new Error('login failed');\n    }\n    return null;\n  };\n\n  redirect = () => {\n    const { location, history } = this.props;\n    const { user, get } = this.state;\n    if (!user) return null;\n    if (location.pathname === '/') {\n      if (user.userType === 'employee') {\n        get.orders();\n        get.orderItems();\n        history.push('/paintings');\n      }\n      if (user.userType === 'artist') history.push('/paintings');\n      if (user.userType === 'customer') history.push('/gallery');\n    }\n    return null;\n  };\n\n  hideError = () => {\n    const { handleErrorClose } = this.state;\n    this.setState({ isErrorDialogVisible: false, errorMessage: '' });\n    if (handleErrorClose) handleErrorClose();\n  };\n\n  hideConfirm = () =>\n    this.setState({ isConfirmDialogVisible: false, confirmObject: {} });\n\n  /* eslint-disable-next-line */\n  handleInvalidLogin = error => this.state.showError(error.message);\n\n  render() {\n    const { children } = this.props;\n    const {\n      isErrorDialogVisible,\n      errorMessage,\n      confirmObject,\n      isConfirmDialogVisible,\n      isLoginModalVisible,\n      showError,\n      showConfirm,\n    } = this.state;\n    return (\n      <Context.Provider value={this.state}>\n        {children}\n        <ErrorDialog\n          title={errorMessage}\n          hide={this.hideError}\n          isVisible={isErrorDialogVisible}\n        />\n        <ConfirmDialog\n          {...confirmObject}\n          hide={this.hideConfirm}\n          isVisible={isConfirmDialogVisible}\n        />\n        <SelectLoginRegister\n          isOpen={isLoginModalVisible}\n          handleClose={this.handleLoginClose}\n          showConfirm={showConfirm}\n          showError={showError}\n          login={this.doLogin}\n          redirect={this.redirect}\n        />\n      </Context.Provider>\n    );\n  }\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const ContextProvider = withRouter(Provider);\n\nfunction getCartFromSessionStorage() {\n  const cart = JSON.parse(sessionStorage.getItem('myCart'));\n  if (!cart) return { orderItems: [] };\n  return cart;\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nexport function ProtectedRoute({ render, isAuthorized, ...rest }) {\n  const incomingRender = render;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        (isAuthorized ? (\n          <>\n            {' '}\n            {incomingRender(props)}\n            {' '}\n          </>\n        ) : <Redirect to=\"/gallery\" />)\n      }\n    />\n  );\n}\n\nProtectedRoute.propTypes = {\n  render: PropTypes.func.isRequired,\n  isAuthorized: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Card, Image, Button, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport './painting.css';\n\nexport function PaintingCard({\n  artist,\n  currentPrice,\n  id,\n  isLive,\n  isPendingSale,\n  isSold,\n  name,\n  thumbUrl,\n}) {\n  return (\n    <Card>\n      <Image className=\"painting--card-image\" src={thumbUrl} alt={name} />\n      <Card.Header className=\"painting--card-header\">{name}</Card.Header>\n      <Card.Meta className=\"painting--card-meta\">\n        {'By: '}\n        {`${artist.firstName} ${artist.lastName}`}\n      </Card.Meta>\n      <Card.Description className=\"painting--card-description\">\n        {showPaintingStatus(isLive, isSold, currentPrice, isPendingSale)}\n        <Link to={`/gallery/${id}`}>\n          <Button icon labelPosition=\"right\" className=\"ui button\">\n          Details\n            <Icon name=\"search\" />\n          </Button>\n        </Link>\n      </Card.Description>\n    </Card>\n  );\n}\n\n\nfunction showPaintingStatus(isLive, isSold, currentPrice, isPendingSale) {\n  if (isPendingSale) return 'Pending Sale';\n  if (!isLive && !isSold) return 'Coming soon!';\n  if (isLive && !isSold) return `Price: $${currentPrice}`;\n  return 'Sold!';\n}\n\nPaintingCard.propTypes = {\n  artist: PropTypes.shape({\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n  }).isRequired,\n  currentPrice: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  isLive: PropTypes.bool.isRequired,\n  isSold: PropTypes.bool.isRequired,\n  isPendingSale: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  thumbUrl: PropTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport { Context } from '../../ContextProvider';\n\nexport function FilterArtists({\n  setArtist,\n  showOnlyActive,\n  inline,\n  selection,\n  clearable,\n  placeholder,\n}) {\n  const { artists } = useContext(Context);\n  function handleChange(_e, { value: artistId }) {\n    setArtist(artistId);\n  }\n  return (\n    <Dropdown\n      placeholder={placeholder}\n      inline={inline}\n      selection={selection}\n      clearable={clearable}\n      onChange={handleChange}\n      options={showOnlyActive ? showActive(artists) : showAll(artists)}\n    />\n  );\n}\n\nfunction showAll(artists) {\n  return artists.map(artist => ({\n    value: artist.id,\n    text: `${artist.firstName} ${artist.lastName}`,\n    iamge: { avatar: true, src: artist.artistImageUrl },\n  }));\n}\n\nfunction showActive(artists) {\n  return artists\n    .filter(artist => artist.paintings.length > 0)\n    .map(artist => ({\n      value: artist.id,\n      text: `${artist.firstName} ${artist.lastName}`,\n      iamge: { avatar: true, src: artist.artistImageUrl },\n    }));\n}\n\nFilterArtists.propTypes = {\n  setArtist: PropTypes.func.isRequired,\n  showOnlyActive: PropTypes.bool.isRequired,\n  inline: PropTypes.bool,\n  selection: PropTypes.bool,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.string,\n};\n\nFilterArtists.defaultProps = {\n  inline: false,\n  selection: false,\n  clearable: true,\n  placeholder: 'All artists',\n};\n","import React, { useState, useContext } from 'react';\nimport {\n  Grid, Icon, Table, Checkbox,\n} from 'semantic-ui-react';\nimport { Context } from '../../ContextProvider';\nimport { PaintingCard } from '../Paintings/PaintingCard';\nimport { FilterArtists } from '../utility/FilterArtists';\n\nexport function Gallery() {\n  const [artistId, setArtistId] = useState(null);\n  const [sold, setSold] = useState(false);\n  const { paintings } = useContext(Context);\n\n  return (\n    <>\n      <Table basic>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell textAlign=\"center\" verticalAlign=\"middle\">\n              <Icon name=\"paint brush\" />\n              {'Filter by Artist: '}\n              <FilterArtists setArtist={setArtistId} showOnlyActive />\n            </Table.HeaderCell>\n            <Table.HeaderCell textAlign=\"center\" verticalAlign=\"middle\">\n              <Checkbox\n                slider\n                label=\"Show sold paintings\"\n                onChange={(_e, data) => {\n                  setSold(data.checked);\n                }}\n              />\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n      </Table>\n\n      <Grid container>\n        {paintings\n          .filter(painting =>\n            (sold\n              ? painting.isSold || painting.isPendingSale\n              : painting.isLive && !painting.isSold))\n          .filter(painting =>\n            (artistId ? painting.artistId === artistId : true))\n          .map(painting => (\n            <Grid.Column mobile={16} tablet={8} computer={5} key={painting.id}>\n              <PaintingCard {...painting} />\n            </Grid.Column>\n          ))}\n      </Grid>\n    </>\n  );\n}\n","import React from 'react';\nimport { Button, Icon, Popup } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport function OrderButton({ id, history }) {\n  return (\n    <Popup\n      content=\"Go to order detail\"\n      trigger={(\n        <Button icon color=\"blue\">\n          <Icon name=\"box\" onClick={() => history.push(`/orders/${id}`)} />\n        </Button>\n)}\n    />\n  );\n}\n\n\nOrderButton.propTypes = {\n  id: PropTypes.number.isRequired, // Expects the ORDER ID!!!\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { useContext } from 'react';\nimport {\n  Table, Header, Popup, Label, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\nimport { OrderButton } from '../utility/OrderButton';\n\nexport function OrderTableItem({ order }) {\n  const { history, calculateOrderTotal } = useContext(Context);\n  const orderItems = order.orderItems.reduce(\n    (accumulator, item) => (item.isCancelled ? accumulator : accumulator + 1),\n    0,\n  );\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Header\n          as=\"h4\"\n          image\n          style={{\n            minHeight: '58px',\n            paddingLeft: '.5rem',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n        >\n          <Header.Content>\n            {`${order.customer.firstName} ${order.customer.lastName}`}\n            <Header.Subheader>\n              {'Submitted: '}\n              {formatDate(order.submittedTime)}\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n      </Table.Cell>\n\n      <Table.Cell>\n        {!order.isCancelled && !order.isCompleted ? (\n          <>\n            <Popup\n              content={`This order contains ${orderItems} painting${\n                orderItems === 1 ? '' : 's'\n              }`}\n              trigger={(\n                <Label color=\"blue\">\n                  <Icon name=\"images\" />\n                  {orderItems}\n                </Label>\n)}\n            />\n            <Popup\n              content=\"The total of the order\"\n              trigger={(\n                <Label color=\"green\">\n                  <Icon name=\"dollar sign\" />\n                  {calculateOrderTotal(order.id)}\n                </Label>\n)}\n            />\n          </>\n        ) : null}\n\n        {order.isCancelled ? (\n          <Header as=\"h4\" color=\"red\" content=\"Cancelled\" />\n        ) : null}\n        {order.isCompleted ? (\n          <Header as=\"h4\" color=\"blue\" content=\"Completed\" />\n        ) : null}\n      </Table.Cell>\n      <Table.Cell>\n        <OrderButton id={order.id} history={history} />\n      </Table.Cell>\n    </Table.Row>\n  );\n}\n\nOrderTableItem.propTypes = {\n  order: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nfunction formatDate(inputDate) {\n  return new Date(inputDate).toLocaleString('en-US', {\n    hour12: true,\n    weekday: 'short',\n    day: 'numeric',\n    month: 'short',\n    hour: 'numeric',\n    minute: '2-digit',\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport { OrderTableItem } from './OrderTableItem';\n\n\nexport function OrderTable({ ordersList }) {\n  return (\n    <Table>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>\n            Order\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            Status\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            Actions\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {renderTableItems(ordersList)}\n      </Table.Body>\n    </Table>\n  );\n}\n\nOrderTable.propTypes = {\n  ordersList: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\n\nfunction renderTableItems(items) {\n//   let newItems = (user.userType === 'artist')\n//     ? items.filter(item => item.artistId === user.artist.id)\n//     : null;\n\n  //   if (user.userType === 'employee') {\n  //     newItems = items.filter((item) => {\n  //       if (!item.isSubmitted && !item.isLive && !item.isSold) return false;\n  //       return true;\n  //     });\n\n\n  return items.map(item => (\n    <OrderTableItem\n      order={item}\n      key={item.id}\n    />\n  ));\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Tab, Header, Table } from 'semantic-ui-react';\nimport { Context } from '../../ContextProvider';\nimport { OrderTable } from './OrderTable';\nimport { API } from '../../modules/api/API';\n\nexport function Orders() {\n  const [activeTab, setActiveTab] = useState(0);\n  const [storeAccount, setStoreAccount] = useState(null);\n  const { orders } = useContext(Context);\n\n  const getStoreAccount = () => API.stores.get().then(setStoreAccount);\n\n  useEffect(() => {\n    getStoreAccount();\n  }, []);\n\n  const handleChange = (_e, { activeIndex }) => {\n    setActiveTab(activeIndex);\n    getStoreAccount();\n  };\n\n  const panes = [\n    {\n      menuItem: 'Submitted',\n      render: () => (\n        <Tab.Pane>\n          <OrderTable\n            ordersList={orders.filter(\n              item => item.isSubmitted && !item.isCompleted && !item.isCancelled,\n            )}\n          />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Completed',\n      render: () => (\n        <Tab.Pane>\n          <OrderTable\n            ordersList={orders.filter(\n              item => item.isCompleted && !item.isCancelled,\n            )}\n          />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Cancelled',\n      render: () => (\n        <Tab.Pane>\n          <OrderTable ordersList={orders.filter(item => item.isCancelled)} />\n        </Tab.Pane>\n      ),\n    },\n  ];\n\n  return (\n    <>\n      {storeAccount ? (\n        <Table celled unstackable>\n          <Table.Body>\n            <Table.Row>\n              <Table.Cell>\n                <Header as=\"h4\" content=\"Store account balance: \" />\n              </Table.Cell>\n              <Table.Cell>\n                <Header as=\"h4\" content={`$${storeAccount.accountBalance}`} />\n              </Table.Cell>\n            </Table.Row>\n          </Table.Body>\n        </Table>\n      ) : null}\n      <Tab activeIndex={activeTab} onTabChange={handleChange} panes={panes} />\n    </>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, Image, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../ContextProvider';\n\nexport function ArtistNameLink({ id, isLink }) {\n  const { artists } = useContext(Context);\n  const found = artists.find(artist => artist.id === id);\n\n  if (found) {\n    return isLink ? (\n      <Link to={`/artists/${id}`}>\n        <InternalLink {...found} />\n      </Link>\n    ) : (\n      <InternalLink {...found} />\n    );\n  }\n  return null;\n}\n\nArtistNameLink.propTypes = {\n  id: PropTypes.number.isRequired,\n  isLink: PropTypes.bool,\n};\n\nArtistNameLink.defaultProps = {\n  isLink: true,\n};\n\nfunction InternalLink({\n  avatarUrl, firstName, lastName, hometown,\n}) {\n  return (\n    <Header as=\"h4\" image>\n      {avatarUrl ? (\n        <Image circular src={avatarUrl} alt={`${firstName} ${lastName}`} />\n      ) : (\n        <Icon name=\"paint brush\" circular />\n      )}\n      <Header.Content>\n        {`${firstName} ${lastName}`}\n        <Header.Subheader>{hometown}</Header.Subheader>\n      </Header.Content>\n    </Header>\n  );\n}\n\nInternalLink.propTypes = {\n  avatarUrl: PropTypes.string.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  hometown: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Button, Icon, Popup } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport function EditButton({ id, history }) {\n  return (\n    <Popup\n      content=\"Edit this painting\"\n      trigger={(\n        <Button icon>\n          <Icon name=\"edit\" onClick={() => history.push(`/paintings/${id}/edit`)} />\n        </Button>\n)}\n    />\n  );\n}\n\n\nEditButton.propTypes = {\n  id: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { useContext } from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\n\nexport function SendForReviewButton({ id }) {\n  const { edit, showConfirm } = useContext(Context);\n\n  function handleClick() {\n    showConfirm({\n      title: 'Send Painting for Employee Review', // REQUIRED.  The title of the message requesting delete confirmation\n      text: 'Please confirm; you cannot reverse this action.', // The inner content of text to be displayed\n      confirmAction: () => edit.painting({ isSubmitted: true }, id), // Function called when action is confirmed\n      confirmBtnColor: 'green', // String value.  Accepts color of confirmation button.\n      icon: 'arrow circle right', // String value or null.  Icon next to the title\n      btnIcon: 'send', // String value or null.  Icon inside the confirmation button\n      btnText: 'Send it!',\n    });\n  }\n\n  return (\n    <Button icon color=\"green\" onClick={handleClick}>\n      <Icon name=\"send\" />\n    </Button>\n  );\n}\n\nSendForReviewButton.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { Popup, Button, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\n\nexport function DeactivateButton({ id }) {\n  const { edit, showConfirm } = useContext(Context);\n\n  function handleConfirm() {\n    showConfirm({\n      title: 'Remove from live display?', // REQUIRED.  The title of the message requesting delete confirmation\n      text: 'Customers will no longer be able to view this painting', // The inner content of text to be displayed\n      confirmAction: () => {\n        edit.painting({ isLive: false }, id);\n      }, // Function called when action is confirmed\n      confirmBtnColor: 'blue', // String value.  Accepts color of confirmation button.\n      btnIcon: 'undo', // String value or null.  Icon inside the confirmation button\n      btnText: 'Yes', // string value.  Defaults to \"yes\"\n    });\n  }\n  return (\n    <Popup\n      content=\"Remove painting from live display\"\n      trigger={(\n        <Button icon color=\"purple\">\n          <Icon name=\"undo\" onClick={handleConfirm} />\n        </Button>\n)}\n    />\n  );\n}\n\nDeactivateButton.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { Popup, Button, Icon } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\n\nexport function KickbackButton({ id }) {\n  const { edit, showConfirm } = useContext(Context);\n\n  function handleClick() {\n    showConfirm({\n      title: 'Return this painting to artist to edit?', // REQUIRED.  The title of the message requesting delete confirmation\n      text: \"You won't be able to see this painting again until they resubmit.\", // The inner content of text to be displayed\n      confirmAction: () => {\n        edit.painting({ isSubmitted: false }, id);\n      }, // Function called when action is confirmed\n      confirmBtnColor: 'blue', // String value.  Accepts color of confirmation button.\n      btnIcon: 'undo', // String value or null.  Icon inside the confirmation button\n      btnText: 'Yes', // string value.  Defaults to \"yes\"\n    });\n  }\n  return (\n    <Popup\n      content=\"Return painting to artist for corrections\"\n      trigger={(\n        <Button icon color=\"violet\">\n          <Icon name=\"undo\" onClick={handleClick} />\n        </Button>\n)}\n    />\n  );\n}\n\nKickbackButton.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { Button, Icon, Popup } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\n\nexport function GoLiveButton({ id }) {\n  const { edit, showConfirm } = useContext(Context);\n\n  function handleClick() {\n    showConfirm({\n      title: 'Show this painting to customers!', // REQUIRED.  The title of the message requesting delete confirmation\n      text: '', // The inner content of text to be displayed\n      confirmAction: () => edit.painting({ isLive: true }, id), // Function called when action is confirmed\n      confirmBtnColor: 'green', // String value.  Accepts color of confirmation button.\n      icon: 'bullhorn', // String value or null.  Icon next to the title\n      btnIcon: 'fire', // String value or null.  Icon inside the confirmation button\n      btnText: 'Go Live!',\n    });\n  }\n\n  return (\n    <Popup\n      content=\"Show this painting on the customer facing site\"\n      trigger={(\n        <Button icon color=\"green\" onClick={handleClick}>\n          <Icon name=\"send\" />\n        </Button>\n)}\n    />\n  );\n}\n\nGoLiveButton.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { Button, Icon, Popup } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\nimport { API } from '../../modules/api/API';\n\nexport function DeleteButton({ id, type, showText }) {\n  const { showConfirm, remove } = useContext(Context);\n\n  function handleClick(e) {\n    e.preventDefault();\n    showConfirm({\n      title: `Are you sure you want to delete this ${type}?`, // REQUIRED.  The title of the message requesting delete confirmation\n      text: 'This action cannot be reversed!', // The inner content of text to be displayed\n      id, // The id to be passed to the delete function when confirmed (optional)\n      confirmAction: async () => {\n        if (type === 'painting') await API.paintings.edit(id, { artistId: null });\n        return remove[type](id);\n      }, // Function called when action is confirmed\n      confirmBtnColor: 'red', // String value.  Accepts color of confirmation button.\n      icon: 'exclamation', // String value or null.  Icon next to the title\n      btnIcon: 'trash alternate', // String value or null.  Icon inside the confirmation button\n      btnText: 'Yes, delete', // string value.  Defaults to \"yes\"\n    });\n  }\n\n  return (\n    <Popup\n      content={`Delete this ${type}`}\n      trigger={(\n        <Button color=\"red\" width=\"4\" onClick={handleClick} icon={!showText}>\n          {showText ? 'Delete draft' : <Icon name=\"trash alternate\" />}\n        </Button>\n)}\n    />\n  );\n}\n\nDeleteButton.propTypes = {\n  id: PropTypes.number.isRequired,\n  type: PropTypes.oneOf(['artist', 'painting', 'customer', 'employee'])\n    .isRequired,\n  showText: PropTypes.bool,\n};\n\nDeleteButton.defaultProps = {\n  showText: true,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\nimport { EditButton } from '../utility/EditButton';\nimport { SendForReviewButton } from '../utility/SendForReviewButton';\nimport { OrderButton } from '../utility/OrderButton';\nimport { DeactivateButton } from '../utility/DeactivateButton';\nimport { KickbackButton } from '../utility/KickbackButton';\nimport { GoLiveButton } from '../utility/GoLiveButton';\nimport { DeleteButton } from '../utility/DeleteButton';\n\nconst style = {\n  display: 'flex',\n  flexDirection: 'row',\n};\n\nexport function PaintingControls({ id }) {\n  const {\n    user, paintings, history, orders, orderItems,\n  } = useContext(Context);\n\n  const {\n    isSold, isLive, isSubmitted, isPendingSale,\n  } = paintings.find(\n    item => item.id === id,\n  );\n\n  if (user) {\n    if (user.userType === 'artist') {\n      if (isSold || isLive || isSubmitted || isPendingSale) return null;\n      return (\n        <div className=\"table-actionIconContainer\">\n          <DeleteButton id={id} type=\"painting\" />\n          <EditButton id={id} history={history} />\n          <SendForReviewButton id={id} />\n        </div>\n      );\n    }\n\n    if (user.userType === 'employee') {\n      if (isSold || isPendingSale) {\n        //  find all order items containing the painting\n        const order = orderItems\n          .filter(item => item.paintingId === id)\n\n          //  then make an orders array from values referenced in the orderItems table\n          .map(item => orders.find(myOrder => myOrder.id === item.orderId))\n\n          //  then find the order that triggered the current 'isPendingSale' flag.\n          .find(item => item.isSubmitted && !item.isCancelled);\n        const orderId = order ? order.id : NaN;\n\n        return (\n          <div style={style}>\n            <OrderButton id={orderId} history={history} />\n          </div>\n        );\n      }\n      if (isLive) {\n        return (\n          <div style={style}>\n            <DeactivateButton id={id} />\n            <EditButton id={id} history={history} />\n          </div>\n        );\n      }\n      if (isSubmitted) {\n        return (\n          <div style={style}>\n            <KickbackButton id={id} />\n            <DeleteButton id={id} showText={false} type=\"painting\" />\n            <EditButton id={id} history={history} />\n            <GoLiveButton id={id} />\n          </div>\n        );\n      }\n    }\n  }\n  return null;\n}\n\nPaintingControls.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\n\nexport function BuyButton({ id, painting }) {\n  const {\n    user, addToCart, history, myCart, showLogin,\n  } = useContext(Context);\n  const [buttonText, setButtonText] = useState('Add to Cart');\n  const [disabled, setDisabled] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const cartItem = myCart.orderItems.find(item => item.paintingId === id);\n\n  useEffect(() => {\n    if (painting.isPendingSale) {\n      setDisabled(true);\n      setButtonText('Pending sale');\n    }\n\n    if (painting.isSold) {\n      setDisabled(true);\n      setButtonText('Sold');\n    }\n\n    if (cartItem) {\n      setDisabled(true);\n      setButtonText('Already in your cart');\n    }\n  }, [painting.isPendingSale, cartItem, painting.isSold]);\n\n  return (\n    <Button\n      primary\n      disabled={disabled}\n      loading={loading}\n      onClick={() => {\n        if (!user) {\n          showLogin();\n        } else {\n          setLoading(true);\n          addToCart(id);\n          setTimeout(() => history.push('/cart'), 800);\n        }\n      }}\n    >\n      {buttonText}\n    </Button>\n  );\n}\n\nBuyButton.propTypes = {\n  id: PropTypes.number.isRequired,\n  painting: PropTypes.shape({\n    isPendingSale: PropTypes.bool.isRequired,\n    isSold: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Container, Grid, Image } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n// import { API } from '../../modules/api/API';\nimport { Context } from '../../ContextProvider';\nimport { ArtistNameLink } from '../Artists/ArtistNameLink';\nimport { PaintingControls } from '../PaintingList/PaintingControls';\nimport { BuyButton } from './BuyButton';\n\n// const getPainting = async id => await API.paintings.getOne(id);\n\nexport function PaintingDetail({ id }) {\n  const { paintings, user } = useContext(Context);\n  const [showBuyButton, setShowBuyButton] = useState(false);\n\n  const painting = paintings.find(pntg => pntg.id === id);\n\n  useEffect(() => {\n    if (user) {\n      if (user.userType === 'customer') setShowBuyButton(true);\n    } else setShowBuyButton(true);\n  }, [user]);\n\n\n  // const [painting, setPainting] = React.useState([]);\n  // setPainting(getPainting(id));\n  return (\n    <Container>\n      <Grid stackable>\n        {painting ? (\n          <>\n            <Grid.Column width=\"6\">\n              <Image fluid src={painting.imgUrl} alt={painting.name} />\n            </Grid.Column>\n            <Grid.Column width=\"10\">\n              <h3>{painting.name}</h3>\n              <ArtistNameLink id={painting.artistId} />\n              <p style={{ marginTop: '1rem' }}>\n                {`Size: ${painting.height}\" x ${painting.width}\"`}\n              </p>\n              <p style={{ marginTop: '1rem' }}>\n                {`Medium: ${painting.medium}`}\n              </p>\n\n              <p style={{ whiteSpace: 'pre-wrap', marginTop: '1rem' }}>\n                {painting.liveDescription}\n              </p>\n              <p>\nPrice: $\n                {painting.currentPrice}\n              </p>\n              {showBuyButton ? <BuyButton id={id} painting={painting} /> : null}\n              <PaintingControls id={id} />\n            </Grid.Column>\n          </>\n        ) : (\n          <>No painting found!</>\n        )}\n      </Grid>\n    </Container>\n  );\n}\n\nPaintingDetail.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport {\n  Image, Table, Header,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { PaintingControls } from './PaintingControls';\n\nexport function PaintingTableItem({\n  painting, user: { userType },\n}) {\n  return (\n    <Table.Row>\n\n      <Table.Cell selectable>\n        <Link to={`/gallery/${painting.id}`}>\n          <Header\n            as=\"h4\"\n            image\n            style={{\n              minHeight: '58px', paddingLeft: '.5rem', display: 'flex', flexDirection: 'row', alignItems: 'center',\n            }}\n          >\n            <Image src={painting.thumbUrl} />\n            <Header.Content>\n              <strong>{painting.name}</strong>\n              {(userType === 'artist') ? null : (\n                <Header.Subheader>\n                  {`${painting.artist.firstName} ${painting.artist.lastName}`}\n                </Header.Subheader>\n              )}\n            </Header.Content>\n          </Header>\n        </Link>\n      </Table.Cell>\n      <Table.Cell>\n        {showStatus(userType, painting)}\n      </Table.Cell>\n      <Table.Cell>\n        <PaintingControls id={painting.id} />\n      </Table.Cell>\n\n    </Table.Row>\n  );\n}\n\n\nfunction showStatus(userType, {\n  isSubmitted, isLive, isSold, currentPrice, isReviewed, isPendingSale,\n}) {\n  if (userType === 'artist') {\n    if (isSold) return <Header as=\"h4\" color=\"purple\">{`Sold for $${currentPrice}`}</Header>;\n    if (isPendingSale) return <Header as=\"h4\" color=\"green\">Pending Sale</Header>;\n    if (isLive) return <Header as=\"h4\" color=\"blue\">For Sale</Header>;\n    if (isSubmitted) {\n      if (isReviewed) return <Header as=\"h4\" color=\"violet\">Reviewed</Header>;\n      return <Header as=\"h4\" color=\"olive\">Submitted</Header>;\n    }\n    return <Header as=\"h4\" color=\"orange\">Draft</Header>;\n  }\n\n  if (userType === 'employee') {\n    if (isSold) return <Header as=\"h4\" color=\"green\">{`Sold for $${currentPrice}`}</Header>;\n    if (isPendingSale) return <Header as=\"h4\" color=\"purple\">Pending Sale</Header>;\n    if (isLive) return <Header as=\"h4\" color=\"blue\">For Sale</Header>;\n    if (isSubmitted) {\n      if (isReviewed) return <Header as=\"h4\" color=\"violet\">Reviewed</Header>;\n      return <Header as=\"h4\" color=\"orange\">Needs Review</Header>;\n    }\n  }\n\n  // this line should never be reached...\n  return null;\n}\n\nPaintingTableItem.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  painting: PropTypes.shape({\n    artist: PropTypes.shape({\n      firstName: PropTypes.string.isRequired,\n      lastName: PropTypes.string.isRequired,\n    }).isRequired,\n    //   artistId: PropTypes.number.isRequired,\n    // currentPrice: PropTypes.number.isRequired,\n    // forSaleDate: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    // imgUrl: PropTypes.string.isRequired,\n    // liveDescription: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    submittedDescription: PropTypes.string.isRequired,\n    thumbUrl: PropTypes.string.isRequired,\n  }).isRequired,\n  user: PropTypes.shape({\n    userType: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\nimport { PaintingTableItem } from './PaintingTableItem';\n\n\nexport function PaintingTable({ paintingList, user, history }) {\n  return (\n    <Table>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>\n            Painting\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            Status\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            Actions\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {renderTableItems(paintingList, user, history)}\n      </Table.Body>\n    </Table>\n  );\n}\n\nPaintingTable.propTypes = {\n  paintingList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  user: PropTypes.shape({\n    userType: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\n\nfunction renderTableItems(items, user, history) {\n  let newItems = (user.userType === 'artist')\n    ? items.filter(item => item.artistId === user.artist.id)\n    : null;\n\n  if (user.userType === 'employee') {\n    newItems = items.filter((item) => {\n      if (!item.isSubmitted && !item.isLive && !item.isSold) return false;\n      return true;\n    });\n  }\n\n\n  return newItems.map(item => (\n    <PaintingTableItem\n      painting={item}\n      history={history}\n      user={user}\n      key={item.id}\n    />\n  ));\n}\n","\nimport shrinkImage from 'browser-image-compression';\n\n\nconst options = {\n  mainImg: {\n    maxSizeMB: 1, // 1mb file - Only use this for detail view\n    maxWidthOrHeight: 1200,\n    useWebWorker: false,\n  },\n  thumbImg: {\n    maxSizeMB: 0.2, // 200kb\n    maxWidthOrHeight: 400,\n    useWebWorker: false,\n\n  },\n  avatarImg: {\n    maxSizeMB: 0.03, // 30kb\n    maxWidthOrHeight: 80,\n    useWebWorker: false,\n\n  },\n};\n\n\nexport async function compressImage(imageFile, imageType) {\n  // imageType should be \"mainImg\", \"thumbImg\", or \"avatarImg\"\n  // console.log('original file instanceof Blob', imageFile instanceof Blob);\n  // console.log(`original file size:  ${imageFile.size / 1024 / 1024} MB`);\n\n  try {\n    const compressedFile = await shrinkImage(imageFile, options[imageType]);\n    // console.log('compressed file instanceof Blob', compressedFile instanceof Blob);\n    // console.log(`compressed file size:  ${compressedFile.size / 1024 / 1024} MB`);\n    return compressedFile;\n  } catch (e) {\n    /* eslint-disable-next-line */\n    console.log(e);\n    return e;\n  }\n}\n","import React, { useState, useContext } from 'react';\nimport { Input, Form, Button } from 'semantic-ui-react';\nimport './addPainting.css';\nimport PropTypes from 'prop-types';\nimport { compressImage } from '../utility/compressImage';\nimport { Context } from '../../ContextProvider';\n\nexport function AddPainting({ setActiveTab }) {\n  const {\n    user, /* storageRef, */ artists, add,\n  } = useContext(Context);\n  const [artistId, setArtistId] = useState(\n    user.userType === 'artist' ? user.artist.id : null,\n  );\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [price, setPrice] = useState(null);\n  const [medium, setMedium] = useState('');\n  const [height, setHeight] = useState(NaN);\n  const [width, setWidth] = useState(NaN);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n    const mainImg = await compressImage(photo, 'mainImg');\n    const thumbImg = await compressImage(photo, 'thumbImg');\n\n    add\n      .painting({\n        name,\n        artistId,\n        submittedDescription: description,\n        liveDescription: description,\n        medium,\n        height,\n        width,\n        forSaleDate: null,\n        // imgUrl: await storageRef\n        //   .child(`${Date.now()}-${name}-main`)\n        //   .put(mainImg)\n        //   .then(response => response.ref.getDownloadURL()),\n        // thumbUrl: await storageRef\n        //   .child(`${Date.now()}-${name}-thumb`)\n        //   .put(thumbImg)\n        //   .then(response => response.ref.getDownloadURL()),\n        currentPrice: price,\n        isSubmitted: false,\n        isReviewed: false,\n        isPendingSale: false,\n        isLive: false,\n        isSold: false,\n      })\n      .then(() => setActiveTab(0));\n  }\n\n  return (\n    <Form loading={loading} onSubmit={e => handleSubmit(e)}>\n      <Form.Field\n        required\n        value={name}\n        onChange={(_e, { value }) => setName(value)}\n        control={Input}\n        label=\"Painting Name\"\n        placeholder=\"Painting name\"\n        id=\"name\"\n      />\n\n      <Form.Group widths={8}>\n        <Form.Select\n          width=\"6\"\n          label=\"Artist Name\"\n          required\n          disabled={user.userType === 'artist'}\n          options={artists.map(artist => ({\n            key: artist.id,\n            text: `${artist.firstName} ${artist.lastName}`,\n            value: artist.id,\n            image: { avatar: true, src: artist.artistImageUrl },\n          }))}\n          onChange={(_e, { value }) => setArtistId(value)}\n          value={artistId}\n          id=\"artistId\"\n        />\n\n        <Form.Field\n          width=\"6\"\n          required\n          value={medium}\n          onChange={(_e, { value }) => setMedium(value)}\n          control={Input}\n          label=\"Medium\"\n          placeholder=\"Oil on Canvas\"\n        />\n        <Form.Field\n          required\n          control=\"input\"\n          type=\"number\"\n          label=\"Price\"\n          onChange={e => setPrice(parseInt(e.target.value, 10))}\n          placeholder=\"Suggest a price for us\"\n          width=\"6\"\n        />\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Field\n          control=\"input\"\n          width=\"4\"\n          required\n          type=\"number\"\n          label=\"Height in inches\"\n          onChange={e => setHeight(parseInt(e.target.value, 10))}\n          placeholder=\"24\"\n        />\n        <Form.Field\n          width=\"4\"\n          required\n          control=\"input\"\n          type=\"number\"\n          label=\"Width in inches\"\n          onChange={e => setWidth(parseInt(e.target.value, 10))}\n          placeholder=\"36\"\n        />\n        <Form.Field\n          width=\"8\"\n          required\n          control=\"input\"\n          type=\"file\"\n          label=\"Photo\"\n          onChange={e => setPhoto(e.target.files[0])}\n          placeholder=\"Upload an image\"\n        />\n      </Form.Group>\n\n      <Form.TextArea\n        value={description}\n        onChange={(_e, { value }) => setDescription(value)}\n        required\n        label=\"Description\"\n        rows={7}\n        placeholder=\"Painting description\"\n      />\n\n      <Button type=\"submit\" content=\"Save\" color=\"purple\" width=\"4\" />\n    </Form>\n  );\n}\n\nAddPainting.propTypes = {\n  setActiveTab: PropTypes.func.isRequired,\n};\n","import React, { useContext, useState } from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\nimport { PaintingTable } from './PaintingTable';\nimport { AddPainting } from './AddPainting';\n\nexport function PaintingList({ history }) {\n  const [activeTab, setActiveTab] = useState(0);\n  const { paintings, user } = useContext(Context);\n\n  const handleChange = (_e, { activeIndex }) => {\n    setActiveTab(activeIndex);\n  };\n  const panes = [\n    {\n      menuItem: 'Drafts',\n      render: () => (\n        <Tab.Pane>\n          {paintings ? (\n            <PaintingTable\n              user={user}\n              tableType=\"pending\"\n              history={history}\n              paintingList={paintings.filter(\n                ({ isLive, isPendingSale, isSold }) =>\n                  !isLive && !isPendingSale && !isSold,\n              )}\n            />\n          ) : null}\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Active',\n      render: () => (\n        <Tab.Pane>\n          <PaintingTable\n            tableType=\"active\"\n            user={user}\n            history={history}\n            paintingList={paintings.filter(\n              ({ isLive, isSold, isPendingSale }) =>\n                isLive && !isSold && !isPendingSale,\n            )}\n          />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Sold',\n      render: () => (\n        <Tab.Pane>\n          <PaintingTable\n            tableType=\"sold\"\n            user={user}\n            history={history}\n            paintingList={paintings.filter(\n              ({ isLive, isSold, isPendingSale }) =>\n                !isLive && (isPendingSale || isSold),\n            )}\n          />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Add',\n      render: () => (\n        <Tab.Pane>\n          <AddPainting setActiveTab={setActiveTab} />\n        </Tab.Pane>\n      ),\n    },\n  ];\n\n  // function handleChange(e, { activeIndex }) {\n  //   setActiveTab(activeIndex);\n  // }\n\n  return (\n    <Tab activeIndex={activeTab} onTabChange={handleChange} panes={panes} />\n  );\n}\n\nPaintingList.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card, Image, Button, Icon,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport function ArtistCard({\n  id, firstName, lastName, imgUrl, hometown,\n}) {\n  return (\n    <Card>\n      <Image className=\"painting--card-image\" src={imgUrl} alt={`${firstName} ${lastName}`} />\n      <Card.Header className=\"painting--card-header\">{`${firstName} ${lastName}`}</Card.Header>\n      <Card.Meta className=\"painting--card-meta\">\n        {`Hometown: ${hometown}`}\n      </Card.Meta>\n      <Card.Description className=\"painting--card-description\">\n        {/* {`Price: $${currentPrice}`} */}\n        <Link to={`/artists/${id}`}>\n          <Button icon labelPosition=\"right\" className=\"ui button\">\n            Details\n            <Icon name=\"search\" />\n          </Button>\n        </Link>\n      </Card.Description>\n    </Card>\n  );\n}\n\n\nArtistCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  firstName: PropTypes.string.isRequired,\n  lastName: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  hometown: PropTypes.string,\n};\n\n\nArtistCard.defaultProps = {\n  hometown: 'Not provided',\n};\n","import React, { useContext } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { Context } from '../../ContextProvider';\nimport { ArtistCard } from './ArtistCard';\n\nexport function Artists() {\n  const { artists } = useContext(Context);\n\n  return (\n    <Grid container>\n      {artists.map(artist => (\n        <Grid.Column mobile={16} tablet={8} computer={5} key={artist.id}>\n          <ArtistCard {...artist} />\n        </Grid.Column>\n      ))}\n    </Grid>\n  );\n}\n","\n\nexport function checkEmployeeAccess(user, employeePropToCheck) {\n  if (!user) return false; // Checks logged in state\n  if (user.userType !== 'employee') return false;\n  return user.employee[employeePropToCheck];\n}\n\nexport const checkLoggedIn = user => (!!user);\n\nexport const checkNotCustomer = (user) => {\n  const loggedIn = checkLoggedIn(user);\n  return loggedIn && user.userType !== 'customer';\n};\n\n\nexport function canEditArtistPermissions(user) {\n  if (!user) return false;\n  if (user.userType === 'customer') return false;\n  if (user.userType === 'employee' && !user.employee.canEditCustomers) return false;\n  return true;\n}\n","import React, { useContext } from 'react';\nimport {\n  Table, Header, Popup, Label, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\nimport { OrderButton } from '../utility/OrderButton';\n\nexport function AccountOrderTableItem({ order }) {\n  const { history, calculateOrderTotal } = useContext(Context);\n  const orderItems = order.orderItems.reduce(\n    (accumulator, item) => (item.isCancelled ? accumulator : accumulator + 1),\n    0,\n  );\n\n  return (\n    <Table.Row>\n      <Table.Cell\n        selectable\n        onClick={() => history.push(`/orders/${order.id}`)}\n        style={{ cursor: 'pointer' }}\n      >\n        <Header\n          as=\"h4\"\n          image\n          style={{\n            minHeight: '58px',\n            paddingLeft: '.5rem',\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n        >\n          <Header.Content>\n            {`Order Number: ${order.id}`}\n            <Header.Subheader>\n              {'Submitted: '}\n              {formatDate(order.submittedTime)}\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n      </Table.Cell>\n      <Table.Cell>\n        {!order.isCancelled && !order.isCompleted ? (\n          <>\n            <Popup\n              content={`This order contains ${orderItems} painting${\n                orderItems === 1 ? '' : 's'\n              }`}\n              trigger={(\n                <Label color=\"blue\">\n                  <Icon name=\"images\" />\n                  {orderItems}\n                </Label>\n)}\n            />\n            <Popup\n              content=\"The total of the order\"\n              trigger={(\n                <Label color=\"green\">\n                  <Icon name=\"dollar sign\" />\n                  {calculateOrderTotal(order.id)}\n                </Label>\n)}\n            />\n          </>\n        ) : null}\n\n        {order.isCancelled ? (\n          <Header as=\"h4\" color=\"red\" content=\"Cancelled\" />\n        ) : null}\n        {order.isCompleted ? (\n          <Header as=\"h4\" color=\"blue\" content=\"Completed\" />\n        ) : null}\n      </Table.Cell>\n      <Table.Cell>\n        <OrderButton id={order.id} history={history} />\n      </Table.Cell>\n    </Table.Row>\n  );\n}\n\nAccountOrderTableItem.propTypes = {\n  order: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nfunction formatDate(inputDate) {\n  return new Date(inputDate).toLocaleString('en-US', {\n    hour12: true,\n    weekday: 'short',\n    day: 'numeric',\n    month: 'short',\n    hour: 'numeric',\n    minute: '2-digit',\n  });\n}\n","import React, { useContext } from 'react';\nimport { Segment, Header, Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\nimport { AccountOrderTableItem } from './AccountOrderTableItem';\n\nexport function Account() {\n  const { orders, user } = useContext(Context);\n  let data = {};\n  if (user) {\n    if (user.userType === 'artist') {\n      data = user.artist;\n    }\n    if (user.userType === 'customer') {\n      data = user.customer;\n    }\n  }\n\n  return user ? (\n    <Segment.Group>\n      <Segment>\n        <Header content=\"Account Details\" />\n      </Segment>\n      <Segment>\n        <Table columns={2} style={{ width: '50%' }}>\n          <Table.Body>\n            <AccountRow header=\"Username:\" content={user.username} />\n            <AccountRow header=\"Email:\" content={user.email} />\n            <AccountRow\n              header=\"Address:\"\n              content={(\n                <>\n                  <p>{data.address}</p>\n                  <p>{`${data.city}, ${data.state} ${data.zipcode}`}</p>\n                </>\n)}\n            />\n            <AccountRow\n              header=\"Account Balance: \"\n              content={`$${data.accountBalance}`}\n            />\n          </Table.Body>\n        </Table>\n      </Segment>\n      {user.userType === 'customer' ? (\n        <>\n          <Segment>\n            <Header content=\"My Orders\" />\n          </Segment>\n          <Segment>\n            <Table>\n              <Table.Body>\n                {orders ? (\n                  orders\n                    .filter(\n                      ({ customerId, isSubmitted }) =>\n                        customerId === data.id && isSubmitted,\n                    )\n                    .map(order => (\n                      <AccountOrderTableItem order={order} key={order.id} />\n                    ))\n                ) : (\n                  <> </>\n                )}\n              </Table.Body>\n            </Table>\n          </Segment>\n        </>\n      ) : null}\n    </Segment.Group>\n  ) : (\n    <Segment.Group>\n      <Segment>\n        <Header content=\"No User found\" />\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nfunction AccountRow({ header, content }) {\n  return (\n    <Table.Row>\n      <Table.Cell width={4}>{header}</Table.Cell>\n      <Table.Cell width={6}>{content}</Table.Cell>\n    </Table.Row>\n  );\n}\n\nAccountRow.propTypes = {\n  header: PropTypes.string.isRequired,\n  content: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n};\n","\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\n\nexport function EditArtistButton({ id, push, text }) {\n  return (\n    <Button style={{ marginBottom: '1rem' }} onClick={() => push(`/artists/${id}/edit`)}>\n      {text}\n    </Button>\n  );\n}\n\n\nEditArtistButton.propTypes = {\n  id: PropTypes.number.isRequired,\n  push: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport {\n  Image, Header, Grid, Icon,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\nimport { PaintingCard } from '../Paintings/PaintingCard';\nimport { EditArtistButton } from './EditArtistButton';\n\nexport function ArtistProfile({ id }) {\n  const { artists, user, history } = useContext(Context);\n  const artist = artists.find(item => item.id === id);\n\n  let controls = null;\n  if (user) {\n    if (user.userType === 'artist') {\n      if (user.artist.id === id) {\n        controls = (\n          <EditArtistButton\n            id={id}\n            push={history.push}\n            text=\"Edit my Profile\"\n          />\n        );\n      }\n    } else if (user.userType === 'employee') {\n      if (user.employee.canEditCustomers) {\n        controls = (\n          <EditArtistButton\n            id={id}\n            push={history.push}\n            text=\"Edit Artist's Profile\"\n          />\n        );\n      }\n    }\n  }\n\n  return artist ? (\n    <>\n      <Grid stackable style={{ marginBottom: '4rem' }}>\n        <Grid.Column width=\"6\">\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            {controls}\n            {artist.imgUrl ? (\n              <Image\n                fluid\n                src={artist.imgUrl}\n                alt={`${artist.firstName} ${artist.lastName}`}\n              />\n            ) : (\n              <Icon name=\"user circle\" />\n            )}\n          </div>\n        </Grid.Column>\n        <Grid.Column width=\"10\">\n          <Header as=\"h1\">\n            <Header.Content>\n              {`${artist.firstName} ${artist.lastName}`}\n            </Header.Content>\n            <Header.Subheader>\n              {'Hometown: '}\n              {artist.hometown ? artist.hometown : 'Not Provided'}\n            </Header.Subheader>\n          </Header>\n          <section style={{ whiteSpace: 'pre-wrap' }}>\n            {artist.artistDescription}\n          </section>\n        </Grid.Column>\n      </Grid>\n\n      <Header as=\"h4\">\n        <Header.Content>Featured Paintings</Header.Content>\n      </Header>\n      <Grid container>\n        {artist.paintings\n          .filter(\n            ({ isLive, isSold, isPendingSale }) =>\n              isLive || isSold || isPendingSale,\n          )\n          .map(painting => (\n            <Grid.Column mobile={16} tablet={8} computer={5} key={painting.id}>\n              <PaintingCard {...painting} artist={artist} />\n            </Grid.Column>\n          ))}\n      </Grid>\n    </>\n  ) : (\n    <Header>Artist not found!</Header>\n  );\n}\n\nArtistProfile.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport {\n  Input, Form, Button, Image, Grid,\n} from 'semantic-ui-react';\nimport './addPainting.css';\nimport PropTypes from 'prop-types';\nimport { compressImage } from '../utility/compressImage';\nimport { DeleteButton } from '../utility/DeleteButton';\nimport { DeactivateButton } from '../utility/DeactivateButton';\nimport { GoLiveButton } from '../utility/GoLiveButton';\n// import { GoLiveButton } from '../utility/GoLiveButton';\n\nexport function EditPainting({\n  user, id, /* storageRef, */ artists, edit, history, painting,\n}) {\n  const [artistId, setArtistId] = useState(painting.artistId);\n  const [name, setName] = useState(painting.name);\n  const [description, setDescription] = useState(painting.submittedDescription);\n  const [photo, setPhoto] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [price, setPrice] = useState(painting.currentPrice);\n  const [medium, setMedium] = useState(painting.medium);\n  const [height, setHeight] = useState(painting.height);\n  const [width, setWidth] = useState(painting.width);\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n\n    const editedPainting = {\n      name,\n      artistId,\n      submittedDescription: description,\n      liveDescription: description,\n      medium,\n      height,\n      width,\n      currentPrice: price,\n    };\n    if (user.userType === 'employee') editedPainting.isReviewed = true;\n\n    if (photo) {\n      const mainImg = await compressImage(photo, 'mainImg');\n      const thumbImg = await compressImage(photo, 'thumbImg');\n      // editedPainting.imgUrl = await storageRef.child(`${Date.now()}-${name}-main`)\n      //   .put(mainImg)\n      //   .then(response => response.ref.getDownloadURL());\n      // editedPainting.thumbUrl = await storageRef.child(`${Date.now()}-${name}-thumb`)\n      //   .put(thumbImg)\n      //   .then(response => response.ref.getDownloadURL());\n    }\n\n\n    edit.painting(editedPainting, id);\n    history.goBack();\n  }\n\n\n  return (\n    <Grid stackable>\n      <Grid.Column tablet=\"6\">\n        <Image src={painting.imgUrl} />\n      </Grid.Column>\n      <Grid.Column tablet=\"10\">\n        <Form\n          loading={loading}\n          onSubmit={e => handleSubmit(e)}\n        >\n          <Form.Field\n            required\n            value={name}\n            onChange={(_e, { value }) => setName(value)}\n            control={Input}\n            label=\"Painting Name\"\n            placeholder=\"Painting name\"\n            id=\"name\"\n          />\n\n          <Form.Group widths={8}>\n            <Form.Select\n              width=\"6\"\n              label=\"Artist Name\"\n              required\n              disabled={user.userType === 'artist'}\n              options={artists.map(artist => ({\n                key: artist.id,\n                text: `${artist.firstName} ${artist.lastName}`,\n                value: artist.id,\n                image: { avatar: true, src: artist.artistImageUrl },\n              }))}\n              onChange={(_e, { value }) => setArtistId(value)}\n              value={artistId}\n              id=\"artistId\"\n            />\n\n            <Form.Field\n              width=\"6\"\n\n              required\n              value={medium}\n              onChange={(_e, { value }) => setMedium(value)}\n              control={Input}\n              label=\"Medium\"\n              placeholder=\"Oil on Canvas\"\n            />\n            <Form.Field\n              required\n              control=\"input\"\n              type=\"number\"\n              label=\"Price\"\n              value={price}\n              onChange={e => setPrice(parseInt(e.target.value, 10))}\n              placeholder=\"Suggest a price for us\"\n              width=\"6\"\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Field\n              control=\"input\"\n              width=\"4\"\n              required\n              value={height}\n              type=\"number\"\n              label=\"Height in inches\"\n              onChange={e => setHeight(parseInt(e.target.value, 10))}\n              placeholder=\"24\"\n            />\n            <Form.Field\n              width=\"4\"\n              required\n              value={width}\n              control=\"input\"\n              type=\"number\"\n              label=\"Width in inches\"\n              onChange={e => setWidth(parseInt(e.target.value, 10))}\n              placeholder=\"36\"\n            />\n            <Form.Field\n              width=\"8\"\n\n              control=\"input\"\n              type=\"file\"\n              label=\"Replace Existing Photo?\"\n              onChange={e => setPhoto(e.target.files[0])}\n              placeholder=\"Upload an image\"\n            />\n          </Form.Group>\n\n          <Form.Field\n            value={description}\n            control=\"textarea\"\n            onChange={e => setDescription(e.target.value)}\n            required\n            label=\"Painting Description\"\n            rows={7}\n            placeholder=\"Painting description\"\n          />\n\n\n          <div style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            float: 'right',\n          }}\n          >\n\n            <EditControls user={user} painting={painting} />\n          </div>\n\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\n\nfunction EditControls({ user, painting }) {\n  //  If user is artist, they are able to edit only if the painting has not been submitted\n\n  if (user.userType === 'artist') {\n    if (!painting.isSubmitted) {\n      return (\n        <>\n          <DeleteButton id={painting.id} type=\"painting\" />\n          <Button type=\"submit\" content=\"Save\" color=\"purple\" width=\"4\" />\n        </>\n      );\n    }\n    return null;\n  }\n\n  if (user.userType === 'employee') {\n    if (painting.isSold || painting.isPendingSale) return null;\n    if (painting.isLive) {\n      return (\n        <>\n          <DeactivateButton id={painting.id} />\n          <Button type=\"submit\" content=\"Save\" color=\"purple\" width=\"4\" />\n        </>\n      );\n    }\n    // painting is in \"submitted\" status.\n    return (\n      <>\n        <Button type=\"submit\" content=\"Save\" color=\"purple\" width=\"4\" />\n        <GoLiveButton id={painting.id} />\n      </>\n    );\n  }\n  return null;\n}\n\n\nEditControls.propTypes = {\n  user: PropTypes.shape({\n    userType: PropTypes.string.isRequired,\n  }).isRequired,\n  painting: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    isSubmitted: PropTypes.bool.isRequired,\n    isPendingSale: PropTypes.bool.isRequired,\n    isSold: PropTypes.bool.isRequired,\n    isLive: PropTypes.bool.isRequired,\n\n  }).isRequired,\n};\n\n\nEditPainting.propTypes = {\n  id: PropTypes.number.isRequired,\n  painting: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  user: PropTypes.shape({\n    userType: PropTypes.string.isRequired,\n  }).isRequired,\n  // storageRef: PropTypes.shape({\n  //   child: PropTypes.func.isRequired,\n  // }).isRequired,\n  artists: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n  edit: PropTypes.shape({\n    painting: PropTypes.func.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport {\n  Input, Form, Button, Image, Grid, Header,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { compressImage } from '../utility/compressImage';\n// import { DeleteButton } from '../utility/DeleteButton';\n\nexport function EditArtist({\n  // user,\n  id,\n  // storageRef,\n  artist,\n  edit,\n  history,\n}) {\n  const [firstName, setFirstName] = useState(artist.firstName);\n  const [lastName, setLastName] = useState(artist.lastName);\n  const [description, setDescription] = useState(artist.artistDescription);\n  const [hometown, setHometown] = useState(artist.hometown);\n  const [photo, setPhoto] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState(artist.phoneNumber);\n  if (!artist) {\n    return (\n      <Header as=\"h4\">Artist not found!</Header>\n    );\n  }\n\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n\n    const editedArtist = {\n      firstName,\n      lastName,\n      artistDescription: description,\n      hometown,\n      phoneNumber,\n    };\n    if (photo) {\n      const mainImg = await compressImage(photo, 'mainImg');\n      const thumbImg = await compressImage(photo, 'thumbImg');\n      // editedArtist.imgUrl = await storageRef.child(`${Date.now()}-${lastName}-main`)\n      //   .put(mainImg)\n      //   .then(response => response.ref.getDownloadURL());\n      // editedArtist.avatarUrl = await storageRef.child(`${Date.now()}-${lastName}-thumb`)\n      //   .put(thumbImg)\n      //   .then(response => response.ref.getDownloadURL());\n    }\n\n    edit.artist(editedArtist, id).then(() =>\n      history.goBack());\n  }\n\n  return (\n    <>\n\n\n      <Grid stackable>\n        <Grid.Column tablet=\"6\">\n          <Header>Existing Image</Header>\n          <Image fluid src={artist.imgUrl} />\n        </Grid.Column>\n        <Grid.Column tablet=\"10\">\n          <Form\n            loading={loading}\n            onSubmit={e => handleSubmit(e)}\n          >\n            <Form.Group>\n\n              <Form.Field\n                required\n                value={firstName}\n                onChange={(_e, { value }) => setFirstName(value)}\n                control={Input}\n                label=\"First Name\"\n                placeholder=\"John\"\n                id=\"firstName\"\n              />\n\n              <Form.Field\n                required\n                value={lastName}\n                onChange={(_e, { value }) => setLastName(value)}\n                control={Input}\n                label=\"Last Name\"\n                placeholder=\"Doe\"\n                id=\"lastName\"\n              />\n            </Form.Group>\n\n            <Form.Group widths={8}>\n\n\n              <Form.Field\n                width=\"6\"\n                required\n                value={phoneNumber}\n                onChange={(_e, { value }) => setPhoneNumber(value)}\n                control={Input}\n                label=\"Phone Number (Only visible to employees)\"\n                placeholder=\"123-456-7890\"\n              />\n              <Form.Field\n                required\n                control={Input}\n                type=\"text\"\n                label=\"Hometown\"\n                value={hometown}\n                onChange={(_e, { value }) => setHometown(value)}\n                placeholder=\"Clarksville, TN\"\n                width=\"6\"\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Field\n                width=\"8\"\n\n                control=\"input\"\n                type=\"file\"\n                label=\"Replace Existing Photo?\"\n                onChange={e => setPhoto(e.target.files[0])}\n                placeholder=\"Upload an image\"\n              />\n            </Form.Group>\n\n            <Form.Field\n              value={description}\n              control=\"textarea\"\n              onChange={e => setDescription(e.target.value)}\n              required\n              label=\"Painting Description\"\n              rows={7}\n              placeholder=\"Painting description\"\n            />\n\n            <Form.Group>\n              {/* {painting.isLive ? null : (\n                <DeleteButton id={id} type=\"painting\" />\n              )} */}\n\n              <Button type=\"submit\" content=\"Save\" color=\"purple\" width=\"4\" />\n            </Form.Group>\n\n          </Form>\n        </Grid.Column>\n      </Grid>\n\n    </>\n  );\n}\n\n\nEditArtist.propTypes = {\n  id: PropTypes.number.isRequired,\n  // user: PropTypes.shape({\n  //   userType: PropTypes.string.isRequired,\n  // }).isRequired,\n  // storageRef: PropTypes.shape({\n  //   child: PropTypes.func.isRequired,\n  // }).isRequired,\n  artist: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n  }).isRequired,\n  edit: PropTypes.shape({\n    painting: PropTypes.func.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport {\n  Image, Button, Icon, Table, Header,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ArtistNameLink } from '../Artists/ArtistNameLink';\n\n\nexport function PaintingCartItem({\n  painting, user: { userType }, removeFromCart,\n}) {\n  return (\n    <Table.Row>\n\n      <Table.Cell selectable>\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n          <Link to={`/gallery/${painting.id}`}>\n            <Header\n              as=\"h4\"\n              image\n              style={{\n                minHeight: '58px', paddingLeft: '.5rem', display: 'flex', flexDirection: 'row', alignItems: 'center',\n              }}\n            >\n              <Image src={painting.thumbUrl} />\n              <Header.Content>\n                <strong>{painting.name}</strong>\n                {(userType === 'artist') ? null : (\n                  <Header.Subheader>\n                    {/* {`${artist.firstName} ${artist.lastName}`} */}\n                  </Header.Subheader>\n                )}\n              </Header.Content>\n            </Header>\n          </Link>\n\n          <Button icon basic onClick={() => removeFromCart(painting.id)}>\n            <Icon name=\"times circle\" color=\"red\" />\n\n          </Button>\n        </div>\n      </Table.Cell>\n      <Table.Cell>\n        <ArtistNameLink id={painting.artist.id} isLink={false} />\n      </Table.Cell>\n      <Table.Cell>\n        {`$${painting.currentPrice}`}\n\n      </Table.Cell>\n    </Table.Row>\n  );\n}\n\n\nPaintingCartItem.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  removeFromCart: PropTypes.func.isRequired,\n  painting: PropTypes.shape({\n    artist: PropTypes.shape({\n      firstName: PropTypes.string.isRequired,\n      lastName: PropTypes.string.isRequired,\n    }).isRequired,\n    //   artistId: PropTypes.number.isRequired,\n    // currentPrice: PropTypes.number.isRequired,\n    // forSaleDate: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    // imgUrl: PropTypes.string.isRequired,\n    // liveDescription: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    submittedDescription: PropTypes.string.isRequired,\n    thumbUrl: PropTypes.string.isRequired,\n  }).isRequired,\n  user: PropTypes.shape({\n    userType: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\n\nfunction EditButton({ id, history }) {\n  return (\n    <Button icon>\n      <Icon name=\"edit\" onClick={() => history.push(`/paintings/${id}/edit`)} />\n    </Button>\n  );\n}\n\n\nEditButton.propTypes = {\n  id: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Header, Table, Transition, Button, Icon, Loader, Segment, Dimmer, Card, Responsive,\n} from 'semantic-ui-react';\nimport { PaintingCartItem } from './PaintingCartItem';\n\n\nexport function Cart({\n  myCart, history, user, paintings, removeFromCart, edit, createCart,\n}) {\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const orderedPaintings = myCart.orderItems.map(orderItem => paintings.find(item => item.id === orderItem.paintingId));\n\n  // The 'isDefined' variable checks to see if data has been loaded.\n  // Otherwise the page will break as it will try to access properties of an undefined object\n  // (happens on initial paint before the fetch call resolves)\n  const isDefined = !!orderedPaintings[0];\n\n  return (\n    <>\n      <Header as=\"h1\" style={{ marginBottom: '2rem' }}>\n    My Cart\n      </Header>\n      {(orderedPaintings.length > 0) ? (\n        <Segment>\n          <Dimmer active={loading}>\n            <Loader>\nSubmitting...\n            </Loader>\n          </Dimmer>\n\n          <Dimmer active={success}>\n            <Card>\n\n              <Card.Content>\n                <Card.Header>Your order has been received!</Card.Header>\n                <Card.Description>\n      We will be in touch soon.\n                </Card.Description>\n\n\n              </Card.Content>\n\n            </Card>\n\n          </Dimmer>\n\n          <Table celled>\n\n            <Table.Header>\n              <Table.Row>\n\n                <Table.HeaderCell>\n                  <Responsive minWidth={767}>Painting Name</Responsive>\n                  <Responsive maxWidth={766}>Items:</Responsive>\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  <Responsive minWidth={767}>Artist</Responsive>\n                </Table.HeaderCell>\n                <Table.HeaderCell>\n                  <Responsive minWidth={767}>Price</Responsive>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n\n            <Table.Body>\n              <Transition.Group animation=\"slide down\" duration={300}>\n                {isDefined ? orderedPaintings.map(painting => (\n                  <PaintingCartItem\n                    painting={painting}\n                    history={history}\n                    removeFromCart={removeFromCart}\n                    user={user}\n                    key={painting.id}\n                  />\n\n                )) : null}\n              </Transition.Group>\n              <Table.Row>\n                <Table.Cell>\n                  <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n                    {'Order Total:'}\n                    <Responsive maxWidth={766}>\n                      {isDefined ? `$${(\n                        orderedPaintings.reduce((total, painting) => total + painting.currentPrice, 0)\n                      )}` : null}\n                    </Responsive>\n                  </div>\n\n                </Table.Cell>\n                <Table.Cell>\n                  <Button\n                    icon\n                    primary\n                    fluid\n                    onClick={() => {\n                      setLoading(true);\n                      edit.order({\n                        isSubmitted: true,\n                        submittedTime: new Date(),\n\n                      }, myCart.id).then(() => {\n                        orderedPaintings.forEach((painting) => {\n                          edit.painting({ isPendingSale: true, isLive: false }, painting.id);\n                        });\n                      });\n\n                      setTimeout(() => {\n                        setSuccess(true);\n                        setLoading(false);\n                        setTimeout(() => {\n                          createCart();\n                          history.push('/gallery');\n                        }, 2000);\n                      }, 1000);\n                    }}\n                  >\n                    <Icon name=\"dollar sign\" />\nBuy Now\n                  </Button>\n                </Table.Cell>\n                <Table.Cell>\n                  <Responsive minWidth={767}>\n                    {isDefined ? `$${(\n                      orderedPaintings.reduce((total, painting) => total + painting.currentPrice, 0)\n                    )}` : null}\n                  </Responsive>\n                </Table.Cell>\n              </Table.Row>\n            </Table.Body>\n          </Table>\n\n        </Segment>\n      ) : (\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <Card>\n            <Card.Content>\n              <Card.Header>\n                <Icon name=\"frown outline\" color=\"orange\" size=\"big\" />\nYour cart is empty...\n              </Card.Header>\n            </Card.Content>\n          </Card>\n        </div>\n      )}\n    </>\n  );\n}\n\nCart.propTypes = {\n  edit: PropTypes.shape({\n    order: PropTypes.func.isRequired,\n    painting: PropTypes.func.isRequired,\n  }).isRequired,\n  myCart: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  createCart: PropTypes.func.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  paintings: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n  removeFromCart: PropTypes.func.isRequired,\n\n};\n","import React, { useState } from 'react';\nimport {\n  Modal, Form, Message, Button, Icon, Segment, Header,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\n\nexport function DeleteOrderItemModal({\n  isModalVisible, handleClose, edit, updateAll, orderItemId,\n}) {\n  const [message, setMessage] = useState('');\n  const [modalDisabled, setModalDisabled] = useState(false);\n  const [successHidden, setSuccessHidden] = useState(true);\n  const handleCancelItem = (e) => {\n    e.preventDefault();\n    setModalDisabled(true);\n    edit.orderItem({\n      isCancelled: true,\n      cancelMessage: message,\n    }, orderItemId)\n      .then(updateAll)\n      .then(() => {\n        setTimeout(() => {\n          setSuccessHidden(false);\n        }, 300);\n        setTimeout(handleClose, 800);\n      });\n  };\n\n\n  const handleFieldChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  return (\n    <Modal\n      open={isModalVisible}\n      onClose={handleClose}\n    >\n      <Segment>\n        <Header>\n          <Header.Content>\n          Do you want to reject this order item?\n            <Header.Subheader>\n\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n        <Form>\n          <Form.Field\n            disabled={modalDisabled}\n            control=\"textarea\"\n            label=\"Please explain to the customer why this order item was cancelled:\"\n            value={message}\n            onChange={handleFieldChange}\n          />\n          <Message success header=\"Order item cancelled!\" hidden={successHidden} />\n          <Form.Group style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n          }}\n          >\n            <Button icon onClick={handleClose}>\n              <Icon name=\"undo\" />\n              {' Go back'}\n            </Button>\n            <Button type=\"submit\" icon onClick={handleCancelItem} color=\"orange\" loading={modalDisabled}>\n              <Icon name=\"trash\" />\n              {' Yes, cancel this item'}\n            </Button>\n          </Form.Group>\n\n        </Form>\n      </Segment>\n    </Modal>\n  );\n}\n\n\nDeleteOrderItemModal.propTypes = {\n  isModalVisible: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  edit: PropTypes.shape({\n    orderItem: PropTypes.func.isRequired,\n  }).isRequired,\n  updateAll: PropTypes.func.isRequired,\n  orderItemId: PropTypes.number.isRequired,\n\n};\n","import React, { useState } from 'react';\nimport {\n  Image, Button, Icon, Table, Header,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ArtistNameLink } from '../Artists/ArtistNameLink';\nimport { DeleteOrderItemModal } from './DeleteOrderItemModal';\n\n\nexport function PaintingOrderItem({\n  painting, user: { userType }, edit, updateAll, showControls, isCompleted,\n}) {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const handleOpen = () => setIsModalVisible(true);\n  const handleClose = () => setIsModalVisible(false);\n  const {\n    isCancelled, cancelMessage,\n  } = painting.orderItem;\n\n  return (\n    <Table.Row>\n      <DeleteOrderItemModal\n        isModalVisible={isModalVisible}\n        handleClose={handleClose}\n        edit={edit}\n        updateAll={updateAll}\n        orderItemId={painting.orderItem.id}\n      />\n      <Table.Cell selectable={!isCancelled}>\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\n          {isCancelled ? (\n            <>\n              <Header\n                as=\"h4\"\n                image\n                style={{\n                  minHeight: '58px',\n                  paddingLeft: '.5rem',\n                  display: 'flex',\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}\n              >\n                <Image src={painting.thumbUrl} />\n\n                <Header.Content>\n\n                  <strong style={{ textDecoration: 'line-through' }}>{painting.name}</strong>\n                  <Header.Subheader>{cancelMessage}</Header.Subheader>\n                </Header.Content>\n              </Header>\n            </>\n          ) : (\n            <>\n              <Link to={`/gallery/${painting.id}`}>\n                <Header\n                  as=\"h4\"\n                  image\n                  style={{\n                    minHeight: '58px',\n                    paddingLeft: '.5rem',\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Image src={painting.thumbUrl} />\n                  <Header.Content style={{ textDecoration: isCancelled ? 'line-through' : 'none' }}>\n                    <strong>{painting.name}</strong>\n                    {(userType === 'artist') ? null : (\n                      <Header.Subheader>\n                        {/* {`${artist.firstName} ${artist.lastName}`} */}\n                      </Header.Subheader>\n                    )}\n                  </Header.Content>\n                </Header>\n              </Link>\n              {showControls ? (\n                <Button icon basic onClick={handleOpen}>\n                  <Icon name=\"times circle\" color=\"red\" />\n\n                </Button>\n              ) : null}\n            </>\n          )}\n\n\n        </div>\n      </Table.Cell>\n      <Table.Cell>\n        <ArtistNameLink id={painting.artist.id} isLink={false} />\n      </Table.Cell>\n      <Table.Cell>\n        {isCancelled ? 'Cancelled' : (\n          <>\n            {isCompleted && userType === 'employee' ? (\n              <Table>\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>Item Total</Table.Cell>\n                    <Table.Cell>{`$${painting.currentPrice}`}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Artist Share</Table.Cell>\n                    <Table.Cell>{`$${painting.artistShare}`}</Table.Cell>\n                  </Table.Row>\n                  <Table.Row>\n                    <Table.Cell>Store Share</Table.Cell>\n                    <Table.Cell>{`$${painting.storeShare}`}</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n            ) : (\n              <p>{`$${painting.currentPrice}`}</p>\n            )}\n          </>\n        )}\n\n      </Table.Cell>\n    </Table.Row>\n  );\n}\n\n\nPaintingOrderItem.propTypes = {\n  isCompleted: PropTypes.bool.isRequired,\n  showControls: PropTypes.bool.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  edit: PropTypes.shape({\n    orderItem: PropTypes.func.isRequired,\n  }).isRequired,\n  updateAll: PropTypes.func.isRequired,\n  painting: PropTypes.shape({\n    artist: PropTypes.shape({\n      firstName: PropTypes.string.isRequired,\n      lastName: PropTypes.string.isRequired,\n    }).isRequired,\n    //   artistId: PropTypes.number.isRequired,\n    // currentPrice: PropTypes.number.isRequired,\n    // forSaleDate: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n\n    // imgUrl: PropTypes.string.isRequired,\n    // liveDescription: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    submittedDescription: PropTypes.string.isRequired,\n    thumbUrl: PropTypes.string.isRequired,\n  }).isRequired,\n  user: PropTypes.shape({\n    userType: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\n\nfunction EditButton({ id, history }) {\n  return (\n    <Button icon>\n      <Icon name=\"edit\" onClick={() => history.push(`/paintings/${id}/edit`)} />\n    </Button>\n  );\n}\n\n\nEditButton.propTypes = {\n  id: PropTypes.number.isRequired,\n\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport {\n  Modal, Form, Message, Button, Icon, Segment, Header,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\n\nexport function CancelOrderModal({\n  isModalVisible, handleClose, edit, updateAll, order, orderedPaintings,\n}) {\n  const [message, setMessage] = useState('');\n  const [modalDisabled, setModalDisabled] = useState(false);\n  const [successHidden, setSuccessHidden] = useState(true);\n  const handleCancelItem = (e) => {\n    e.preventDefault();\n    setModalDisabled(true);\n    edit.order({\n      isCancelled: true,\n      cancelMessage: message,\n      cancelledTime: new Date(),\n    }, order.id)\n      .then(() => orderedPaintings.forEach((painting) => {\n        edit.painting({ isPendingSale: false, isLive: true }, painting.id);\n      }))\n      .then(updateAll)\n      .then(() => {\n        setTimeout(() => {\n          setSuccessHidden(false);\n        }, 300);\n        setTimeout(handleClose, 800);\n      });\n  };\n\n\n  const handleFieldChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  return (\n    <Modal\n      open={isModalVisible}\n      onClose={handleClose}\n    >\n      <Segment>\n        <Header\n          content=\"Do you want to cancel this customer order?\"\n          subheader=\"Note that paintings will be automatically made available for sale again.\"\n        />\n        <Form>\n          <Form.Field\n            disabled={modalDisabled}\n            control=\"textarea\"\n            label=\"Please explain to the customer why this order was cancelled:\"\n            value={message}\n            onChange={handleFieldChange}\n          />\n          <Message success header=\"Order item cancelled!\" hidden={successHidden} />\n          <Form.Group style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n          }}\n          >\n            <Button icon onClick={handleClose}>\n              <Icon name=\"undo\" />\n              {' Go back'}\n            </Button>\n            <Button type=\"submit\" icon onClick={handleCancelItem} color=\"orange\" loading={modalDisabled}>\n              <Icon name=\"trash\" />\n              {' Yes, cancel this Order'}\n            </Button>\n          </Form.Group>\n\n        </Form>\n      </Segment>\n    </Modal>\n  );\n}\n\n\nCancelOrderModal.propTypes = {\n  isModalVisible: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  edit: PropTypes.shape({\n    order: PropTypes.func.isRequired,\n  }).isRequired,\n  updateAll: PropTypes.func.isRequired,\n  order: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  orderedPaintings: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  })).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Header } from 'semantic-ui-react';\n\nexport function OrderControls({\n  order,\n  showControls,\n  handleApprove,\n  showCancelOrderModal,\n}) {\n  return showControls ? (\n    <div>\n      <Button\n        negative\n        style={{ marginRight: '1rem' }}\n        onClick={showCancelOrderModal}\n        content=\"Cancel Order\"\n      />\n      <Button content=\"Approve Order\" primary onClick={handleApprove} />\n    </div>\n  ) : (\n    <div>\n      {order.isCancelled ? (\n        <Header as=\"h3\" color=\"red\" content=\"Order Cancelled\" />\n      ) : null}\n      {order.isCompleted ? (\n        <Header as=\"h3\" color=\"blue\" content=\"Order Completed\" />\n      ) : null}\n    </div>\n  );\n}\n\nOrderControls.propTypes = {\n  order: PropTypes.shape({\n    isCancelled: PropTypes.bool.isRequired,\n    isCompleted: PropTypes.bool.isRequired,\n  }).isRequired,\n  showControls: PropTypes.bool.isRequired,\n  handleApprove: PropTypes.func.isRequired,\n  showCancelOrderModal: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Label } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport function StatusItem({ label, time, color }) {\n  return (\n    <Label color={color}>\n      {label}\n      <Label.Detail>\n        {new Date(time).toLocaleString('en-US', {\n          hour12: true,\n          weekday: 'short',\n          day: 'numeric',\n          month: 'short',\n          hour: 'numeric',\n          minute: '2-digit',\n        })}\n      </Label.Detail>\n    </Label>\n  );\n}\n\nStatusItem.propTypes = {\n  label: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Header,\n  Table,\n  Transition,\n  Loader,\n  Segment,\n  Dimmer,\n  Card,\n  Responsive,\n  Item,\n  Grid,\n} from 'semantic-ui-react';\nimport { PaintingOrderItem } from './PaintingOrderItem';\nimport { Context } from '../../ContextProvider';\nimport { CancelOrderModal } from './CancelOrderModal';\nimport { OrderControls } from './OrderControls';\nimport { StatusItem } from './StatusItem';\n\nexport function OrderDetail({ id }) {\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const {\n    orders,\n    paintings,\n    history,\n    user,\n    edit,\n    updateAll,\n    calculateOrderTotal,\n    completeOrder,\n  } = useContext(Context);\n  const order = orders.find(item => item.id === id);\n  const userType = user ? user.userType : null;\n  const customer = order ? order.customer : { id: null };\n  let authorized = false;\n  let showControls = order ? !order.isCancelled && !order.isCompleted : false;\n\n  function handleApprove() {\n    setLoading(true);\n    updateAll().then(() => completeOrder(id));\n    setTimeout(() => {\n      setSuccess(true);\n      setLoading(false);\n      setTimeout(() => history.push('/orders'), 2000);\n    });\n  }\n\n  function showOrderCancelModal() {\n    setIsModalVisible(true);\n  }\n\n  function handleClose() {\n    setIsModalVisible(false);\n  }\n\n  const orderedPaintings = order\n    ? order.orderItems.map((orderItem) => {\n      const painting = paintings.find(\n        item => item.id === orderItem.paintingId,\n      );\n      painting.orderItem = orderItem;\n      return painting;\n    })\n    : null;\n\n  // The 'isDefined' variable checks to see if data has been loaded.\n  // Otherwise the page will break as it will try to access properties of an undefined object\n  // (happens on initial paint before the fetch call resolves)\n  const isDefined = order ? !!orderedPaintings[0] : false;\n  const isCancelled = order ? order.isCancelled : false;\n\n  //  Check if user is authorized to view this order\n  if (userType === 'customer') {\n    showControls = false;\n    // checks the order's customer id against the logged in user's customer id.\n    if (customer.id === user.customer.id) authorized = true;\n  }\n  if (userType === 'employee') {\n    if (user.employee.canProcessOrders) authorized = true;\n  }\n\n  return isDefined && authorized ? (\n    <Segment.Group>\n      <CancelOrderModal\n        isModalVisible={isModalVisible}\n        handleClose={handleClose}\n        edit={edit}\n        updateAll={updateAll}\n        orderedPaintings={orderedPaintings}\n        order={order}\n      />\n      <Dimmer active={loading}>\n        <Loader content=\"Submitting...\" />\n      </Dimmer>\n      <Dimmer active={success}>\n        <Card content={<Header content=\"This order has been processed!\" />} />\n      </Dimmer>\n      <Segment disabled={loading}>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div>\n            <Header\n              as=\"h1\"\n              style={{ marginBottom: '2rem' }}\n              content={`Order number: ${id}`}\n            />\n            {order.isSubmitted ? (\n              <StatusItem\n                label=\"Submitted\"\n                time={order.submittedTime}\n                color=\"blue\"\n              />\n            ) : null}\n            {order.isCompleted ? (\n              <StatusItem\n                label=\"Approved\"\n                time={order.approvedTime}\n                color=\"green\"\n              />\n            ) : null}\n            {order.isCancelled ? (\n              <StatusItem\n                label=\"Cancelled\"\n                time={order.cancelledTime}\n                color=\"red\"\n              />\n            ) : null}\n          </div>\n          <OrderControls\n            order={order}\n            showControls={showControls}\n            handleApprove={handleApprove}\n            showOrderCancelModal={showOrderCancelModal}\n          />\n        </div>\n      </Segment>\n      {isCancelled ? (\n        <Segment>\n          <Grid stackable columns={2}>\n            <Grid.Row>\n              <Grid.Column>\n                <Header content=\"Reason for cancellation:\" />\n              </Grid.Column>\n              <Grid.Column>{order.cancelMessage}</Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Segment>\n      ) : null}\n      <Segment disabled={loading || order.isCancelled}>\n        {customer ? (\n          <Grid columns={2}>\n            <Grid.Row>\n              <Grid.Column>\n                <Header as=\"h3\">Customer Data:</Header>\n                <p style={{ marginTop: '2rem' }}>\n                  {`Account Balance: $${customer.accountBalance}`}\n                </p>\n              </Grid.Column>\n              <Grid.Column>\n                <Item>\n                  <Item.Header as=\"h5\">\n                    {`${customer.firstName} ${customer.lastName}`}\n                  </Item.Header>\n                  <Item.Meta>{customer.address}</Item.Meta>\n                  <Item.Meta>\n                    {`${customer.city}, ${customer.state} ${customer.zipcode}`}\n                  </Item.Meta>\n                </Item>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        ) : null}\n      </Segment>\n      <Segment disabled={loading || order.isCancelled}>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                <Responsive minWidth={767}>Painting Name</Responsive>\n                <Responsive maxWidth={766}>Items:</Responsive>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <Responsive minWidth={767}>Artist</Responsive>\n              </Table.HeaderCell>\n              <Table.HeaderCell>\n                <Responsive minWidth={767}>Price</Responsive>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            <Transition.Group animation=\"slide down\" duration={300}>\n              {isDefined\n                ? orderedPaintings.map(painting => (\n                  <PaintingOrderItem\n                    painting={painting}\n                    history={history}\n                    isCompleted={order.isCompleted}\n                    edit={edit}\n                    showControls={showControls}\n                    updateAll={updateAll}\n                    user={user}\n                    key={painting.id}\n                  />\n                ))\n                : null}\n            </Transition.Group>\n          </Table.Body>\n          <Table.Footer>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"3\">\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  <span>Order Total: </span>\n                  <div>{`$${calculateOrderTotal(id)}`}</div>\n                </div>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Segment>\n    </Segment.Group>\n  ) : (\n    <></>\n  );\n}\n\nOrderDetail.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Table } from 'semantic-ui-react';\n\n\nexport function UserTable({ children }) {\n  return (\n    <Table>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>\n            Name\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            Status\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            Actions\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {children}\n      </Table.Body>\n    </Table>\n  );\n}\n\nUserTable.propTypes = {\n\n  children: PropTypes.node.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { Popup, Label, Icon } from 'semantic-ui-react';\nimport { Context } from '../../ContextProvider';\n\nexport function ShowStatus() {\n  const { paintings } = useContext(Context);\n  const pending = paintings.filter(\n    painting => painting.isSubmitted && !painting.isLive && !painting.isSold,\n  ).length;\n  const active = paintings.filter(\n    painting => painting.isLive && !painting.isSold,\n  ).length;\n  const sold = paintings.filter(painting => painting.isSold).length;\n\n  return (\n    <>\n      <Popup\n        content={`This artist has ${pending} paintings pending approval`}\n        trigger={(\n          <Label color=\"orange\">\n            <Icon name=\"pause\" />\n            {pending}\n          </Label>\n)}\n      />\n      <Popup\n        content={`This artist has ${active} paintings available for sale`}\n        trigger={(\n          <Label color=\"blue\">\n            <Icon name=\"bolt\" />\n            {active}\n          </Label>\n)}\n      />\n\n      <Popup\n        content={`This artist has ${sold} sold paintings`}\n        trigger={(\n          <Label color=\"green\">\n            <Icon name=\"box\" />\n            {sold}\n          </Label>\n)}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { ArtistNameLink } from '../Artists/ArtistNameLink';\nimport { ShowStatus } from './ShowStatus';\n\nexport function ArtistTableItem({ artist }) {\n  return (\n    <Table.Row>\n      <Table.Cell selectable>\n        <ArtistNameLink id={artist.id} />\n      </Table.Cell>\n      <Table.Cell>\n        <ShowStatus />\n      </Table.Cell>\n      <Table.Cell />\n    </Table.Row>\n  );\n}\n\nArtistTableItem.propTypes = {\n  artist: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\n\nimport PropTypes from 'prop-types';\n\nexport function SubmitButton({\n  initialIcon, disabled, defaultColor, buttonText, submitActionThatReturnsPromise, style,\n}) {\n  const [loading, setLoading] = useState(false);\n  const [color, setColor] = useState(defaultColor);\n  const [icon, setIcon] = useState('edit');\n  const [btnText, setbtnText] = useState(buttonText);\n\n  function handleButtonClick(e) {\n    e.preventDefault();\n    setLoading(true);\n    submitActionThatReturnsPromise().then(setButtonSuccess).catch(setButtonError);\n  }\n\n  function setButtonError() {\n    setTimeout(() => {\n      setLoading(false);\n      setColor('orange');\n      if (buttonText) setbtnText('error!');\n      clearButtonStatus();\n    }, 300);\n  }\n\n  function setButtonSuccess() {\n    setTimeout(() => {\n      setLoading(false);\n      setIcon('check');\n      setColor('green');\n      if (buttonText) setbtnText('Submitted!');\n      clearButtonStatus();\n    }, 300);\n  }\n\n  function clearButtonStatus() {\n    setTimeout(() => {\n      setIcon(initialIcon);\n      setColor(defaultColor);\n      if (buttonText) setbtnText(buttonText);\n    }, 1000);\n  }\n\n  return (\n    <Button\n      icon\n      style={style}\n      disabled={disabled}\n      loading={loading}\n      color={color}\n      onClick={handleButtonClick}\n    >\n      <Icon name={icon} />\n      {btnText}\n    </Button>\n  );\n}\n\nSubmitButton.propTypes = {\n  initialIcon: PropTypes.string.isRequired,\n  style: PropTypes.objectOf(PropTypes.string),\n  disabled: PropTypes.bool,\n  defaultColor: PropTypes.string,\n  buttonText: PropTypes.string,\n  submitActionThatReturnsPromise: PropTypes.func.isRequired,\n};\n\nSubmitButton.defaultProps = {\n  disabled: false,\n  defaultColor: null,\n  buttonText: null,\n  style: null,\n};\n","import React, { useState } from 'react';\nimport {\n  Table, Header, Form,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { SubmitButton } from '../utility/SubmitButton';\n\nexport function EmployeeTableItem({\n  employee, edit,\n}) {\n  const [editEmployees, setEditEmployees] = useState(employee.canEditEmployees);\n  const [editInventory, setEditInventory] = useState(employee.canEditInventory);\n  const [editUsers, setEditUsers] = useState(employee.canEditUsers);\n  const [editOrders, setEditOrders] = useState(employee.canProcessOrders);\n  const [disabled, setDisabled] = useState(true);\n\n\n  return (\n    <Table.Row>\n\n      <Table.Cell>\n        <Header>\n          <Header.Content>{employee.user.username}</Header.Content>\n          <Header.Subheader>{employee.user.email}</Header.Subheader>\n        </Header>\n      </Table.Cell>\n      <Table.Cell>\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n\n        }}\n        >\n          <Form.Checkbox\n            label=\"Administrator\"\n            checked={editEmployees}\n            onChange={() => {\n              setDisabled(false);\n              setEditEmployees(!editEmployees);\n            }}\n          />\n\n\n          <Form.Checkbox\n            label=\"Edit Inventory\"\n            checked={editInventory}\n            onChange={() => {\n              setDisabled(false);\n              setEditInventory(!editInventory);\n            }}\n          />\n          <Form.Checkbox\n            label=\"Edit Users\"\n            checked={editUsers}\n            onChange={() => {\n              setDisabled(false);\n              setEditUsers(!editUsers);\n            }}\n          />\n          <Form.Checkbox\n            label=\"Edit Orders\"\n            checked={editOrders}\n            onChange={() => {\n              setDisabled(false);\n              setEditOrders(!editOrders);\n            }}\n          />\n        </div>\n\n      </Table.Cell>\n      <Table.Cell>\n        <SubmitButton\n          initialIcon=\"edit\"\n          disabled={disabled}\n          buttonText=\"Submit Changes\"\n          submitActionThatReturnsPromise={() => {\n            setDisabled(true);\n            return edit.employee({\n              canEditEmployees: editEmployees,\n              canEditInventory: editInventory,\n              canEditUsers: editUsers,\n              canProcessOrders: editOrders,\n            }, employee.id);\n          }}\n        />\n\n      </Table.Cell>\n\n    </Table.Row>\n  );\n}\n\nEmployeeTableItem.propTypes = {\n  employee: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  edit: PropTypes.shape({\n    employee: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport {\n  Image, Icon, Table, Header,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nexport function CustomerTableItem({ customer }) {\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Header as=\"h4\" image>\n          {customer.imageUrl ? (\n            <Image\n              circular\n              src={customer.imageUrl}\n              alt={`${customer.firstName} ${customer.lastName}`}\n            />\n          ) : (\n            <Icon name=\"user\" />\n          )}\n          <Header.Content>\n            {`${customer.firstName} ${customer.lastName}`}\n            <Header.Subheader>\n              {`${customer.city}, ${customer.state}`}\n            </Header.Subheader>\n          </Header.Content>\n        </Header>\n      </Table.Cell>\n      <Table.Cell>{/* {showStatus(artist)} */}</Table.Cell>\n      <Table.Cell>{/* {showControls(artist)} */}</Table.Cell>\n    </Table.Row>\n  );\n}\n\nCustomerTableItem.propTypes = {\n  customer: PropTypes.shape({\n    firstName: PropTypes.string.isRequired,\n    lastName: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string,\n  }).isRequired,\n};\n","/* eslint react/no-unused-state: 0 */\n\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { API } from './modules/api/API';\n\nconst Context = React.createContext();\n\nexport const { Consumer: UserConsumer } = Context;\n\nexport class UserProvider extends PureComponent {\n  state = {\n    users: [],\n    get: {\n      users: async () => this.setState({ users: await API.users.getAll() }),\n    },\n    add: {\n      /* eslint-disable-next-line */\n      user: newUser => API.users.create(newUser).then(this.state.get.users)\n    },\n    edit: {\n      /* eslint-disable-next-line */\n      user: (newUser, id) => API.users.edit(id, newUser).then(this.state.get.users),\n    },\n  }\n\n  componentDidMount() {\n    const { get } = this.state;\n    get.users();\n  }\n\n\n  /* eslint-disable-next-line */\n\n\n  render() {\n    const { children } = this.props;\n    return (\n      <Context.Provider value={this.state}>\n        {children}\n\n\n      </Context.Provider>\n    );\n  }\n}\n\nUserProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport {\n  // Image,\n  // Button,\n  Icon,\n  Table,\n  Header,\n  Checkbox,\n  // Label,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { Context } from '../../ContextProvider';\n\nexport function UserTableItem({\n  user: {\n    username, email, userType, isActive, id,\n  },\n  edit,\n  //  user,\n}) {\n  const { showConfirm } = useContext(Context);\n  const [active, setActive] = useState(isActive);\n  const loggedInUser = JSON.parse(sessionStorage.getItem('userdata'));\n  const image = (() => {\n    if (userType === 'customer') return 'user';\n    if (userType === 'employee') return 'id card';\n\n    return 'paint brush'; // userType === 'artist'\n  })();\n\n  const toggleActive = () =>\n    edit.user({ isActive: !active }, id).then(() => setActive(!active));\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Header as=\"h4\" image>\n          <Icon name={image} />\n          <Header.Content>\n            {username}\n            <Header.Subheader>{email}</Header.Subheader>\n          </Header.Content>\n        </Header>\n      </Table.Cell>\n      <Table.Cell>\n        <Checkbox\n          toggle\n          label={active ? 'Active User' : 'Disabled User'}\n          disabled={loggedInUser.id === id}\n          checked={active}\n          onChange={() => {\n            if (active) {\n              showConfirm({\n                title: 'Are you sure you want to deactivate this user?', // REQUIRED.  The title of the message requesting delete confirmation\n                text: 'They will no longer be able to log in at all!', // The inner content of text to be displayed\n                id, // The id to be passed to the delete function when confirmed (optional)\n                confirmAction: toggleActive, // Function called when action is confirmed\n                confirmBtnColor: 'orange', // String value.  Accepts color of confirmation button.\n                icon: 'exclamation', // String value or null.  Icon next to the title\n                btnIcon: 'cancel', // String value or null.  Icon inside the confirmation button\n                btnText: 'Deactivate user', // string value.  Defaults to \"yes\"\n              });\n            } else toggleActive();\n          }}\n        />\n      </Table.Cell>\n      <Table.Cell />\n    </Table.Row>\n  );\n}\n\nUserTableItem.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    userType: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n  }).isRequired,\n  edit: PropTypes.shape({\n    user: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { useContext } from 'react';\nimport { Tab, Menu } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { UserTable } from './UserTable';\nimport { ArtistTableItem } from './ArtistTableItem';\nimport { EmployeeTableItem } from './EmployeeTableItem';\nimport { CustomerTableItem } from './CustomerTableItem';\nimport { UserConsumer } from '../../AllUsersContext';\nimport { UserTableItem } from './UserTableItem';\nimport { Context } from '../../ContextProvider';\n\n/*\n\nIf you can see this component at all, we've already checked if you're an employee that can edit uers.\n\nThe only auth check needed here is the user.employee.canEditEmployees (superuser access) prop\n\n*/\n\nexport function UserList() {\n  const {\n    artists, customers, user, employees, edit,\n  } = useContext(Context);\n\n  const panes = [\n    {\n      menuItem: 'Artists',\n      render: () => (\n        <Tab.Pane>\n          <UserTable>\n            {artists.map(artist => (\n              <ArtistTableItem key={artist.id} artist={artist} user={user} />\n            ))}\n          </UserTable>\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Customers',\n      render: () => (\n        <Tab.Pane>\n          <UserTable>\n            {customers.map(customer => (\n              <CustomerTableItem key={customer.id} customer={customer} />\n            ))}\n          </UserTable>\n        </Tab.Pane>\n      ),\n    },\n  ];\n\n  if (user.employee.canEditEmployees) {\n    panes.push(\n      {\n        menuItem: 'Employees',\n        render: () => (\n          <Tab.Pane>\n            <UserTable>\n              {employees.map(employee => (\n                <EmployeeTableItem\n                  key={employee.id}\n                  employee={employee}\n                  user={user}\n                  edit={edit}\n                />\n              ))}\n            </UserTable>\n          </Tab.Pane>\n        ),\n      },\n      {\n        menuItem: 'All Users',\n        render: () => (\n          <Tab.Pane>\n            <UserTable>\n              <UserConsumer>\n                {context => (\n                  <>\n                    {context.users.map(item => (\n                      <UserTableItem key={item.id} user={item} {...context} />\n                    ))}\n                  </>\n                )}\n              </UserConsumer>\n            </UserTable>\n          </Tab.Pane>\n        ),\n      },\n    );\n  }\n\n  return (\n    <Tab panes={panes}>\n      <Tab.Pane>\n        <Menu.Item>Helllo</Menu.Item>\n        <UserTable>Im a table</UserTable>\n      </Tab.Pane>\n    </Tab>\n  );\n}\n\nUserList.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  edit: PropTypes.shape({\n    employee: PropTypes.func.isRequired,\n  }).isRequired,\n  user: PropTypes.shape({\n    userType: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","/* eslint react/prop-types: 0 */\n/* eslint react/destructuring-assignment: 0 */\n//  Eslint warns of prop-types for history and match, however this route file\n//  expects to be iterated over from ApplicationViews which provides the routing props.\n\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Gallery } from './components/Gallery/Gallery';\nimport { Orders } from './components/Orders/Orders';\nimport { PaintingDetail } from './components/Paintings/PaintingDetail';\nimport { PaintingList } from './components/PaintingList/PaintingList';\nimport { Artists } from './components/Artists/Artists';\nimport {\n  checkEmployeeAccess,\n  checkLoggedIn,\n  checkNotCustomer,\n  canEditArtistPermissions,\n} from './modules/checkRoute';\nimport { Account } from './components/Account/Account';\nimport { Consumer } from './ContextProvider';\nimport { ArtistProfile } from './components/Artists/ArtistProfile';\nimport { EditPainting } from './components/PaintingList/EditPainting';\nimport { EditArtist } from './components/Artists/EditArtist';\nimport { Cart } from './components/Cart/Cart';\nimport { OrderDetail } from './components/Orders/OrderDetail';\nimport { UserList } from './components/Users/UserList';\n\nexport const checkProtectedRoutes = user => [\n  {\n    path: '/users',\n    render: props => <UserList {...props} />,\n    isAuthorized: checkEmployeeAccess(user, 'canEditUsers'),\n    exact: true,\n  },\n  {\n    path: '/orders',\n    render: props => <Orders {...props} />,\n    isAuthorized: checkEmployeeAccess(user, 'canProcessOrders'),\n    exact: true,\n  },\n  {\n    path: '/orders/:orderId(\\\\d+)',\n    render: (props) => {\n      const id = parseInt(props.match.params.orderId, 10);\n      return <OrderDetail {...props} id={id} />;\n    },\n    isAuthorized: checkLoggedIn(user),\n    exact: true,\n  },\n  {\n    path: '/paintings',\n    render: props => <PaintingList {...props} />,\n    isAuthorized: checkNotCustomer(user),\n    exact: true,\n  },\n  {\n    path: '/paintings/:paintingId(\\\\d+)/edit',\n    render: ({ history, match }) => (\n      <Consumer>\n        {({\n          paintings, /*  storageRef, */ artists, edit, showError,\n        }) => {\n          // conditions to check:\n          // isLoggedIn?  (already checked by 'checkNotCustomer')\n          // isArtist?  If so, is it your painting or someone else's?\n          // iSEmployee?  If so, do you have edit permissions?\n\n          const id = parseInt(match.params.paintingId, 10);\n          let painting = paintings.find(item => item.id === id);\n          if (painting) {\n            if (user.userType === 'artist') {\n              if (user.artist.id !== painting.artistId) {\n                painting = null;\n                showError('This is not your painting!');\n              }\n            } else if (!user.employee.canEditInventory) {\n              showError(\n                'You do not have permission to edit paintings.'\n                  + 'Please talk to your supervisor.',\n              );\n              painting = null;\n            }\n\n            return painting ? (\n              <EditPainting\n                painting={painting}\n                showError={showError}\n                edit={edit}\n                id={id}\n                user={user}\n                // storageRef={storageRef}\n                history={history}\n                artists={artists}\n              />\n            ) : null;\n          }\n          return null;\n        }}\n      </Consumer>\n    ),\n    isAuthorized: checkNotCustomer(user),\n    exact: true,\n  },\n  {\n    path: '/account',\n    render: props => (\n      <Consumer>{context => <Account {...context} {...props} />}</Consumer>\n    ),\n    isAuthorized: checkLoggedIn(user),\n    exact: true,\n  },\n  {\n    path: '/paintings/:paintingId(\\\\d+)',\n    render: (props) => {\n      const id = parseInt(props.match.params.paintingId, 10);\n      return <PaintingDetail {...props} id={id} />;\n    },\n    isAuthorized: true,\n    exact: true,\n  },\n  {\n    path: '/artists/:artistId(\\\\d+)/edit',\n    render: ({ history, match }) => (\n      <Consumer>\n        {({ /* storageRef, */ artists, edit, showError }) => {\n          // conditions to check:\n          // isLoggedIn?  (already checked by 'checkNotCustomer')\n          // isArtist?  If so, is it your profile or someone else's?\n          // iSEmployee?  If so, do you have edit permissions?\n\n          const id = parseInt(match.params.artistId, 10);\n          let artist = artists.find(item => item.id === id);\n          if (artist) {\n            if (user.userType === 'artist') {\n              if (user.artist.id !== artist.id) {\n                artist = null;\n                showError('This is not your profile!', history.goBack);\n              }\n            } else if (!user.employee.canEditCustomers) {\n              showError(\n                'You do not have permission to edit artists.'\n                  + 'Please talk to your supervisor.',\n                history.goBack,\n              );\n              artist = null;\n            }\n\n            return artist ? (\n              <EditArtist\n                artist={artist}\n                showError={showError}\n                edit={edit}\n                id={id}\n                user={user}\n                // storageRef={storageRef}\n                history={history}\n              />\n            ) : null;\n          }\n          return null;\n        }}\n      </Consumer>\n    ),\n    //  Auth:  Either an employee with 'canEditCustomers' permissions or the Artist editing his/her own profile\n    isAuthorized: canEditArtistPermissions(user),\n    exact: true,\n  },\n];\n\nexport const routes = user => [\n  {\n    path: '/artists',\n    render: props => <Artists {...props} />,\n    exact: true,\n  },\n  {\n    path: '/artists/:artistId(\\\\d+)',\n    render: props => (\n      <ArtistProfile\n        {...props}\n        id={parseInt(props.match.params.artistId, 10)}\n      />\n    ),\n    exact: true,\n  },\n  {\n    path: '/gallery',\n    render: props => <Gallery {...props} />,\n    exact: true,\n  },\n  {\n    path: '/cart',\n    render: () => <Consumer>{context => <Cart {...context} />}</Consumer>,\n    exact: true,\n  },\n  {\n    path: '/gallery/:paintingId(\\\\d+)',\n    render: (props) => {\n      const id = parseInt(props.match.params.paintingId, 10);\n      if (user) {\n        if (user.userType !== 'customer') return <Redirect to={`/paintings/${id}`} />;\n      }\n      return <PaintingDetail {...props} id={id} />;\n    },\n    exact: true,\n  },\n];\n","import React from 'react';\nimport MediaQuery from 'react-responsive';\nimport PropTypes from 'prop-types';\n\nexport function HiDpi({ children }) {\n  return <MediaQuery minResolution=\"1.33333dppx\">{children}</MediaQuery>;\n}\n\nexport function LoDpi({ children }) {\n  return <MediaQuery maxResolution=\"1.33332dppx\">{children}</MediaQuery>;\n}\n\nexport function MediaDesktop({ children }) {\n  return <MediaQuery minWidth={1100}>{children}</MediaQuery>;\n}\n\nexport function MediaPhone({ children }) {\n  return <MediaQuery maxWidth={480}>{children}</MediaQuery>;\n}\n\nexport function MediaTablet({ children }) {\n  return (\n    <MediaQuery minWidth={480} maxWidth={1100}>\n      {children}\n    </MediaQuery>\n  );\n}\n\nconst myPropTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nHiDpi.propTypes = myPropTypes;\nLoDpi.propTypes = myPropTypes;\nMediaDesktop.propTypes = myPropTypes;\nMediaPhone.propTypes = myPropTypes;\nMediaTablet.propTypes = myPropTypes;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Menu, Dropdown, Icon, Label,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../ContextProvider';\n\nexport function CartMenuItem({ showText, handleClick }) {\n  const { myCart } = useContext(Context);\n  const numCartItems = myCart.orderItems.length;\n\n  return showText ? (\n    <Menu.Item\n      key=\"cart\"\n      onClick={handleClick}\n      value=\"/cart\"\n      icon={(\n        <Icon.Group>\n          <Icon name=\"shopping cart\" />\n          {numCartItems ? (\n            <Label\n              floating\n              circular\n              size=\"mini\"\n              color=\"orange\"\n              style={{ top: '-1.5em' }}\n            >\n              {numCartItems}\n            </Label>\n          ) : null}\n        </Icon.Group>\n)}\n      name=\"My Cart\"\n      label={{ color: 'orange', floating: true, content: numCartItems }}\n    />\n  ) : (\n    <Link to=\"/cart\">\n      <Dropdown\n        item\n        icon={(\n          <Icon.Group>\n            <Icon name=\"shopping cart\" />\n            {numCartItems ? (\n              <Label\n                floating\n                circular\n                size=\"mini\"\n                color=\"orange\"\n                style={{ top: '-1.5em' }}\n              >\n                {numCartItems}\n              </Label>\n            ) : null}\n          </Icon.Group>\n)}\n      />\n    </Link>\n  );\n}\n\nCartMenuItem.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  showText: PropTypes.bool,\n};\n\nCartMenuItem.defaultProps = {\n  showText: false,\n};\n","import React, { useContext } from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Context } from '../../ContextProvider';\n\nexport function SignInButton() {\n  const { showLogin } = useContext(Context);\n  return (\n    <Menu.Menu position=\"right\">\n      <Menu.Item\n        icon=\"sign-in\"\n        onClick={(e) => {\n          e.preventDefault();\n          showLogin();\n        }}\n      />\n    </Menu.Menu>\n  );\n}\n","import React, { useContext } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { Context } from '../../ContextProvider';\n\nexport function SignoutDropdownItem() {\n  const { logout } = useContext(Context);\n\n  return (\n    <Dropdown.Item\n      key=\"signout\"\n      icon=\"sign-out\"\n      text=\"Sign Out\"\n      value=\"signout\"\n      onClick={logout}\n    />\n  );\n}\n","import React from 'react';\nimport { Dropdown, Menu } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { CartMenuItem } from './CartItem';\nimport { SignInButton } from './SignInButton';\nimport { SignoutDropdownItem } from './SignoutDropdownItem';\n\n/*\n\nroutes needed in navbar:\n\nEmployee view:\n/users\n/artists\n/orders\n/paintings\n/account\n/gallery\n\n*/\n\nexport function PhoneMenu({ user, history }) {\n  function handleClick(_e, { value }) {\n    // setactiveLink(value);\n    history.push(value);\n  }\n  if (user) {\n    if (user.userType === 'employee') {\n      const emp = user.employee;\n      return (\n        <Menu.Menu position=\"right\">\n          <Dropdown item icon=\"bars\">\n            <Dropdown.Menu>\n              {emp.canEditEmployees ? (\n                <Dropdown.Item\n                  key=\"users\"\n                  onClick={handleClick}\n                  icon=\"wrench\"\n                  text=\"Users\"\n                  value=\"/users\"\n                />\n              ) : null}\n              {emp.canEditInventory ? (\n                <Dropdown.Item\n                  key=\"paintings\"\n                  onClick={handleClick}\n                  icon=\"file image\"\n                  text=\"Paintings\"\n                  value=\"/paintings\"\n                />\n              ) : null}\n\n              {emp.canProcessOrders ? (\n                <Dropdown.Item\n                  key=\"orders\"\n                  onClick={handleClick}\n                  icon=\"box\"\n                  text=\"Orders\"\n                  value=\"/orders\"\n                />\n              ) : null}\n\n              <Dropdown.Divider />\n              <SignoutDropdownItem />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Menu>\n      );\n    }\n    if (user.userType === 'customer') {\n      return (\n        <>\n          <Menu.Menu position=\"right\">\n            <CartMenuItem handleClick={handleClick} />\n            <Dropdown item icon=\"bars\">\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  key=\"favorites\"\n                  onClick={handleClick}\n                  icon=\"paint brush\"\n                  text=\"Artists\"\n                  value=\"/artists\"\n                />\n                <Dropdown.Item\n                  key=\"orders\"\n                  onClick={handleClick}\n                  icon=\"box\"\n                  text=\"My Orders\"\n                  value=\"/orders\"\n                />\n\n                <Dropdown.Item\n                  key=\"account\"\n                  onClick={handleClick}\n                  icon=\"edit\"\n                  text=\"My Account\"\n                  value=\"/account\"\n                />\n                <Dropdown.Divider />\n                <SignoutDropdownItem />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Menu.Menu>\n        </>\n      );\n    }\n\n    if (user.userType === 'artist') {\n      return (\n        <Menu.Menu position=\"right\">\n          <Dropdown item icon=\"bars\">\n            <Dropdown.Menu>\n              <Dropdown.Item\n                key=\"paintings\"\n                onClick={handleClick}\n                icon=\"file image\"\n                text=\"My Paintings\"\n                value=\"/paintings\"\n              />\n              <Dropdown.Item\n                key=\"profile\"\n                onClick={handleClick}\n                icon=\"address card\"\n                text=\"My Profile\"\n                value=\"/paintings\"\n              />\n\n              <Dropdown.Item\n                key=\"account\"\n                icon=\"edit\"\n                onClick={handleClick}\n                text=\"My Account\"\n                value=\"/account\"\n              />\n              <Dropdown.Divider />\n              <SignoutDropdownItem />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Menu>\n      );\n    }\n  }\n  // else show login button\n  return <SignInButton />;\n}\n\nPhoneMenu.propTypes = {\n  user: PropTypes.shape({\n    userType: PropTypes.string.isRequired,\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nPhoneMenu.defaultProps = {\n  user: null,\n};\n","import React, { useContext } from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Context } from '../../ContextProvider';\n\nexport function SignoutMenuItem() {\n  const { logout } = useContext(Context);\n  return (\n    <Menu.Item\n      key=\"signout\"\n      icon=\"sign-out\"\n      text=\"Sign Out\"\n      value=\"signout\"\n      onClick={logout}\n    />\n  );\n}\n","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { CartMenuItem } from './CartItem';\nimport { SignInButton } from './SignInButton';\nimport { SignoutMenuItem } from './SignoutMenuItem';\n\nexport function TabletMenu({\n  user,\n  history,\n  //  location,\n}) {\n  // const [activeLink, setactiveLink] = useState(null);\n  function handleClick(_e, { value }) {\n    // setactiveLink(value);\n    history.push(value);\n  }\n  if (user) {\n    const { employee, artist } = user;\n    switch (user.userType) {\n      case 'employee':\n        return (\n          <Menu.Menu position=\"right\" size=\"mini\">\n            {employee.canEditUsers ? (\n              <Menu.Item\n                key=\"users\"\n                onClick={handleClick}\n                icon=\"wrench\"\n                name=\"Users\"\n                value=\"/users\"\n              />\n            ) : null}\n            {employee.canEditInventory ? (\n              <Menu.Item\n                key=\"paintings\"\n                icon=\"file image\"\n                onClick={handleClick}\n                name=\"Paintings\"\n                value=\"/paintings\"\n              />\n            ) : null}\n            {employee.canProcessOrders ? (\n              <Menu.Item\n                key=\"orders\"\n                onClick={handleClick}\n                icon=\"box\"\n                name=\"Orders\"\n                value=\"/orders\"\n              />\n            ) : null}\n\n            <SignoutMenuItem />\n          </Menu.Menu>\n        );\n      case 'customer':\n        return (\n          <Menu.Menu position=\"right\">\n            <Menu.Item\n              key=\"favorites\"\n              onClick={handleClick}\n              icon=\"paint brush\"\n              name=\"Artists\"\n              value=\"/artists\"\n            />\n            <Menu.Item\n              key=\"account\"\n              onClick={handleClick}\n              icon=\"edit\"\n              name=\"Account\"\n              value=\"/account\"\n            />\n            <CartMenuItem handleClick={handleClick} showText />\n\n            <SignoutMenuItem />\n          </Menu.Menu>\n        );\n      default:\n        // artist\n        return (\n          <Menu.Menu position=\"right\">\n            <Menu.Item\n              key=\"paintings\"\n              onClick={handleClick}\n              icon=\"file image\"\n              name=\"Paintings\"\n              value=\"/paintings\"\n            />\n            <Menu.Item\n              key=\"profile\"\n              onClick={handleClick}\n              icon=\"file image\"\n              name=\"Profile\"\n              value={`/artists/${artist.id}`}\n            />\n            <Menu.Item\n              key=\"account\"\n              onClick={handleClick}\n              icon=\"edit\"\n              name=\"Account\"\n              value=\"/account\"\n            />\n            <SignoutMenuItem />\n          </Menu.Menu>\n        );\n    }\n  }\n\n  return <SignInButton />;\n}\n\nTabletMenu.propTypes = {\n  user: PropTypes.shape({\n    userType: PropTypes.oneOf(['employee', 'artist', 'customer']).isRequired,\n    employee: PropTypes.shape({\n      canEditIventory: PropTypes.bool,\n      canProcessOrders: PropTypes.bool,\n      canEditCustomers: PropTypes.bool,\n    }),\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nTabletMenu.defaultProps = {\n  user: null,\n};\n/*\n\n\nIcons:\n\n\"file image\"  -- Paintings\n\"paint brush\"   -- Artists\n\"id card\" --     Employees\n\"box\"  --  Orders\n\"users\" -- Customers\n\"wrench\"  -- Users\n\"dollar sign\" -- Price Adjustments\n \"sign-out\"  -- Sign Out\n\n\"edit\" -- My account\n\n\n\"shopping cart\" -- Shopping Cart\n\n\nEmployee options:\n\nArtists\nPaintings\nEmployees\nOrders\nCustomers\nUsers\nPrice Adjustments\n\nSign Out\n\n\nArtist Options:\n\nMy Paintings\nMy Profile\nMy Account\n\nSign Out\n\nCustomer Options:\nMy Cart\n---\nMy Orders\nMy Account\nFavorite Artists\n\nSign out\n\n\n*/\n","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { CartMenuItem } from './CartItem';\nimport { SignInButton } from './SignInButton';\nimport { SignoutMenuItem } from './SignoutMenuItem';\n\nexport function ComputerMenu({ user, history }) {\n  // const [activeLink, setactiveLink] = useState(null);\n  function handleClick(_e, { value }) {\n    // setactiveLink(value);\n    history.push(value);\n  }\n  if (user) {\n    const { employee } = user;\n    switch (user.userType) {\n      case 'employee':\n        return (\n          <Menu.Menu position=\"right\" size=\"mini\">\n            {employee.canEditUsers ? (\n              <Menu.Item\n                key=\"users\"\n                onClick={handleClick}\n                icon=\"wrench\"\n                name=\"Users\"\n                value=\"/users\"\n              />\n            ) : null}\n            {employee.canEditInventory ? (\n              <Menu.Item\n                key=\"paintings\"\n                icon=\"file image\"\n                onClick={handleClick}\n                name=\"Paintings\"\n                value=\"/paintings\"\n              />\n            ) : null}\n            {employee.canProcessOrders ? (\n              <Menu.Item\n                key=\"orders\"\n                onClick={handleClick}\n                icon=\"box\"\n                name=\"Orders\"\n                value=\"/orders\"\n              />\n            ) : null}\n\n            <SignoutMenuItem />\n          </Menu.Menu>\n        );\n      case 'customer':\n        return (\n          <Menu.Menu position=\"right\">\n            <Menu.Item\n              key=\"favorites\"\n              onClick={handleClick}\n              icon=\"paint brush\"\n              name=\"Artists\"\n              value=\"/artists\"\n            />\n            <Menu.Item\n              key=\"account\"\n              onClick={handleClick}\n              icon=\"edit\"\n              name=\"My Account\"\n              value=\"/account\"\n            />\n            <CartMenuItem handleClick={handleClick} showText />\n\n            <SignoutMenuItem />\n          </Menu.Menu>\n        );\n      default:\n        // 'artist' case\n        return (\n          <Menu.Menu position=\"right\">\n            <Menu.Item\n              key=\"paintings\"\n              onClick={handleClick}\n              icon=\"file image\"\n              name=\"My Paintings\"\n              value=\"/paintings\"\n            />\n            <Menu.Item\n              key=\"account\"\n              onClick={handleClick}\n              icon=\"edit\"\n              name=\"My Account\"\n              value=\"/account\"\n            />\n            <SignoutMenuItem />\n          </Menu.Menu>\n        );\n    }\n  }\n\n  return <SignInButton />;\n}\n\nComputerMenu.propTypes = {\n  user: PropTypes.shape({\n    userType: PropTypes.oneOf(['employee', 'artist', 'customer']).isRequired,\n    employee: PropTypes.shape({\n      canEditIventory: PropTypes.bool,\n      canProcessOrders: PropTypes.bool,\n      canEditCustomers: PropTypes.bool,\n    }),\n  }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nComputerMenu.defaultProps = {\n  user: null,\n};\n","import React, { useContext } from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Context } from '../ContextProvider';\nimport './navbar.css';\nimport { MediaPhone, MediaTablet, MediaDesktop } from './utility/media';\nimport { PhoneMenu } from './Nav/PhoneNav';\nimport { TabletMenu } from './Nav/TabletNav';\nimport { ComputerMenu } from './Nav/ComputerNav';\n\nexport function Navbar() {\n  const { user, history, location } = useContext(Context);\n\n  return (\n    <Menu className=\"navbar\" style={{ backgroundColor: '#edf3f7' }}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '70%',\n          '@media (minWidth: 450px)': {\n            width: '30%',\n          },\n        }}\n      >\n        <Menu.Header\n          as=\"a\"\n          content=\"Fine Consign\"\n          style={{\n            fontFamily: 'Euphoria Script',\n            fontSize: '2.4rem',\n            cursor: 'pointer',\n            color: 'black',\n          }}\n          onClick={() => history.push('/gallery')}\n        />\n      </div>\n\n      <MediaPhone>\n        <PhoneMenu user={user} history={history} location={location} />\n      </MediaPhone>\n      <MediaTablet>\n        <TabletMenu user={user} history={history} location={location} />\n      </MediaTablet>\n      <MediaDesktop>\n        <ComputerMenu user={user} history={history} location={location} />\n      </MediaDesktop>\n    </Menu>\n  );\n}\n","import React from 'react';\nimport { Image } from 'semantic-ui-react';\nimport heroDesktopHi from './assets/hero-4k.jpg';\nimport heroDesktopLo from './assets/hero-1080p.jpg';\nimport heroTabletHi from './assets/hero-retina2.jpg';\nimport heroTabletLo from './assets/hero-1024-2.jpg';\nimport heroMobileHi from './assets/hero-mobile-retina.jpg';\nimport heroMobileLo from './assets/hero-mobile-small.jpg';\nimport {\n  HiDpi,\n  LoDpi,\n  MediaTablet,\n  MediaDesktop,\n  MediaPhone,\n} from '../utility/media';\n\nconst options = {\n  alt: 'Artist paintbrushes in a mason jar',\n  style: {\n    width: '100%',\n    height: '100vh',\n    objectFit: 'cover',\n    objectPosition: '50% 0',\n  },\n};\nexport function HeroImage() {\n  return (\n    <>\n      <MediaPhone>\n        <HiDpi>\n          <Image src={heroMobileHi} {...options} />\n        </HiDpi>\n        <LoDpi>\n          <Image src={heroMobileLo} {...options} />\n        </LoDpi>\n      </MediaPhone>\n      <MediaTablet>\n        <HiDpi>\n          <Image src={heroTabletHi} {...options} />\n        </HiDpi>\n        <LoDpi>\n          <Image src={heroTabletLo} {...options} />\n        </LoDpi>\n      </MediaTablet>\n      <MediaDesktop>\n        <HiDpi>\n          <Image src={heroDesktopHi} {...options} />\n        </HiDpi>\n        <LoDpi>\n          <Image src={heroDesktopLo} {...options} />\n        </LoDpi>\n      </MediaDesktop>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, Transition } from 'semantic-ui-react';\n\nconst style = {\n  mobile: {\n    fontFamily: 'Euphoria Script, cursive',\n    fontSize: '4rem',\n    fontWeight: '400',\n    textAlign: 'center',\n  },\n  desktop: {\n    fontFamily: 'Euphoria Script, cursive',\n    fontSize: '8rem',\n    fontWeight: '400',\n    textAlign: 'center',\n  },\n};\n\n\nexport function Title({ position, children, history }) {\n  const [visible, setVisible] = useState(false);\n  const titleClassName = (position === 'hero') ? 'title--hero' : 'title--navbar';\n  let handleClick = null;\n  if (position === 'navbar') {\n    handleClick = () => history.push('/gallery');\n  }\n\n  useEffect(() => { setTimeout(() => setVisible(true), 200); }, []);\n\n  return (\n    <>\n      <div className={titleClassName}>\n        <div>\n          <Transition visible={visible} animation=\"scale\" duration={800}>\n            <Header\n              as=\"h1\"\n              style={style.desktop}\n              onClick={handleClick}\n              onKeyUp={handleClick}\n              content=\"Fine Consign\"\n            />\n          </Transition>\n        </div>\n        {children}\n      </div>\n    </>\n\n  );\n}\n\n\nTitle.propTypes = {\n  position: PropTypes.oneOf(['hero', 'navbar']).isRequired,\n  children: PropTypes.node,\n  history: PropTypes.shape({ push: PropTypes.func.isRequired }),\n};\n\nTitle.defaultProps = {\n  children: null,\n  history: null,\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  Button, Icon, Image, Header, Transition,\n} from 'semantic-ui-react';\nimport { Context } from '../../ContextProvider';\nimport largeImg from './assets/gallery-lg.jpg';\n\nexport function GalleryButton() {\n  const [visible, setVisible] = useState(false);\n  const { history, showLogin } = useContext(Context);\n  useEffect(() => {\n    setTimeout(() => setVisible(true), 600);\n  }, []);\n\n  return (\n    <Transition visible={visible} animation=\"scale\" duration={800}>\n      <div className=\"loginRegisterBox\">\n        <Header className=\"loginRegisterBox--header\">Go to Gallery</Header>\n        <Image\n          src={largeImg}\n          onClick={() => history.push('/gallery')}\n          fluid\n          style={{\n            cursor: 'pointer',\n            borderRadius: '6px',\n            marginBottom: '2rem',\n          }}\n        />\n\n        <Button fluid icon labelPosition=\"left\" onClick={showLogin}>\n          <Icon name=\"sign-in\" />\n          Log in\n        </Button>\n      </div>\n    </Transition>\n  );\n}\n","import React from 'react';\nimport { HeroImage } from './HeroImage';\nimport { Title } from './Title';\nimport './welcome.css';\nimport { GalleryButton } from './GalleryButton';\n\nexport function Welcome() {\n  return (\n    <div>\n      <HeroImage />\n      <Title position=\"hero\" />\n      <GalleryButton />\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Container, Sticky } from 'semantic-ui-react';\nimport { ProtectedRoute } from './components/utility/ProtectedRoute';\nimport { routes, checkProtectedRoutes } from './routes';\nimport { Navbar } from './components/Navbar';\nimport { Consumer } from './ContextProvider';\nimport { Welcome } from './components/welcome/Welcome';\n\n\nexport class ApplicationViews extends PureComponent {\n  makeProtectedRoutes = myRoutes => myRoutes.map(route => <ProtectedRoute {...route} key={route.path} />)\n\n  makeClearRoutes = myRoutes => myRoutes.map(route => <Route {...route} key={route.path} />)\n\n  render() {\n    return (\n      <>\n        <Route path=\"/:subpath\" render={props => <Sticky><Navbar {...props} /></Sticky>} />\n\n        <Route exact path=\"/\" render={props => <Welcome {...props} />} />\n        <Container style={{ marginTop: '1rem' }}>\n          <Consumer>\n            {({ user }) => (\n              <>\n                {this.makeClearRoutes(routes(user))}\n                {this.makeProtectedRoutes(checkProtectedRoutes(user))}\n              </>\n            )}\n          </Consumer>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { HashRouter } from 'react-router-dom';\nimport FontLoader from 'react-google-font-loader';\nimport { ContextProvider } from './ContextProvider';\nimport { ApplicationViews } from './ApplicationViews';\nimport { UserProvider } from './AllUsersContext';\n\n\nReactDOM.render(\n  <>\n    <FontLoader fonts={[{\n      font: 'Euphoria Script',\n      weights: [400],\n    }]}\n    />\n    <HashRouter basename=\"/\">\n      <ContextProvider>\n        <UserProvider>\n          <ApplicationViews />\n        </UserProvider>\n      </ContextProvider>\n    </HashRouter>\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}